(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 12.1' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    201824,       3751]
NotebookOptionsPosition[    195861,       3660]
NotebookOutlinePosition[    196274,       3676]
CellTagsIndexPosition[    196231,       3673]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell["\<\
The following plots show the efficiency as a function of output power (left) \
and input current (right) of an ESC attached to a motor+propeller load.\
\>", "Text",
 CellChangeTimes->{{3.8207425729975395`*^9, 
  3.8207426247247677`*^9}},ExpressionUUID->"e5af8d3e-5d3b-4409-8b31-\
744bf37c4128"],

Cell[BoxData[
 RowBox[{
  GraphicsBox[
   TagBox[RasterBox[CompressedData["
1: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
u8VG0KS1EnTxegHlacKp8ecOW9Gpp9HhRh4eyr8yfRbngtsjhe4oU2m2R17v
8ZroW1xmG7mLSOUGjT3Ii0vUWd0dZy8sbMlK086Fmrkq/lfRvZnGtrt4Ppzq
V4AIjkTEkkVrcnIo+yu/68Mellh2JTgnKKMZLMs5bBWcAyPQxesFlKcJp8Zf
uUrKtySYg/SH1t5Iaa6GDOR5udkuj8maLOag5ClCS+fOlu7d5aasOiNDnuZg
HcWDgzzmtvT8+Yz8xxy+0QdzxeyQvz5Q81mzprOS05pdXgTk0Ytwql8BIjgS
0VPqPgTPDBqB0MfTQQ/e+kx2sebeQ9YcsVv4vdiaoIvXCyhPE06Nf+vN1W3X
+sc1CabSUocR4l4W0847HZa+wMlw2mTHZdz7tos1+7Cg3Y8f6Kvbs+nbMffl
x9sFgnCqXwEiCBJx59ODszrINwKkj+PMmo0bnUNY7Aefw1I5jjo9v46LebZa
kymYI4Ho4vUCytO09cb/ozxHmAWWFi+yz5kdVGvU+pS7ybEaSuRKcSrFArFu
3ih0WdT4eV6Zq90H8v344XJv93FRMKIUtoa2Xr+CQBAkEtnXFvxDzwXBV4gG
XbxeQHmatltzP9tt7xyjv0FqTXpxib07b1W5t+YqY3lR1PiM6FmO2TTDtGRp
+Mbb2lvdM+xwiz3qRv59vZ0Z9OOcoF3AXIV+WK22W7+CRoiYq6BNY3kLvkI0
6OL1AsrT+FZz5Sid8+Y6hoxeWmr/4nOvozbR7PjI3i/B3uE2R+rZVSOq+e5P
9bdGrU+aIUbdU+R1orppz6PNMrbrVuae7SMP+99c+dftwFxdCARBIu42kKqg
RGTyDXyFaNDF6wWUp/G25jITlfm8Ri/co6vDYrUeln/3u+yRvQ5FJWdHTUqR
U/uhedEx1kpzyzWGm/S3Rq1PSUOELmt/g5B0a3Z5Dks1y+g+fvXOOv6tE8br
OXLlDL/gKYV+TAb0jFyCIBE3aEB1Rkagy+Az+ArRoIvXCyhP41XNZa6GiDrO
kuyv8rbb+/dpDi/A/r0n3oujlmMN2rErDTMGRXVvHrd/L1d/X+SXlHif0GVR
N/J1M5/lLD5nqqqy/eYb+9gnOLd+/xPvgrS7rzBn/mfJ5ozZa1NYenV7tlfn
O7+3h7J2bSIaPHpGLsGRiAgaEMpzgnZ8hXigi9cLKE/jVc0lImc608gR2q+P
eIif/9Il5DzULOPkyY7O9PG/6O+L6HRXR3s7gY2HmoHo3VPvHnzpaB8iu1NV
tuVlDrc8oK/H+y5q+mte8+BmzaSKPeXp0GfxEAosh4mrkoMzShYg0DNyCZpE
NdnZms5KMGamXuArRIMuXi+gPI1XNVc+L8bnNGumx5xZL//NN/ZIySqvxPaU
opId3fdddwTQFxHxPN1Tu1hzZL8iZgjZv+xn5+uCi6k0J1jd05b3+B8NN2oB
S8o8nfHhHcfupKrvGNPOvun8aqby/5YRwaac6b4l3SvPuQxbEb7IK3/l7tBY
eUJ/QlAGPSOXsr17q1NSLF27ysk6cmS9MtatX3EJGmA0MrsVspsEneArRIMu
Xi+gPI14zTWL7fGn07+OaOS89QO7saPjt+0TCzid+CzjF5/7LYanz+n+Afbb
2lvdpy+Z95OXNk2bIpQPMzBcv9pR7Pvrrbn6bLfL25nF+vhju2m1I325z+2j
bzqAhps/c1POeTpmfuiLvQpRdbj80Ht7NsoTix8X5YX+bKCT4PSMTJC8/dsW
bEhPW5uyYH3aR/u3tRWJTq9969zll2osgpo9m//mCwOYKxp08XoB5WnEa67g
yX10WrxIne3zC1p+62lOcFhqROpTzT9nPq/zavbhD9q/O2g1TNMelmGvL1qk
EfpAM7FnYV6Re5nI39bMctBmhhXMmeH857z7ktibxq+SXvoT1185ZwaHvZxI
X9majX7MmLHnlddx5Wxd9uzb0+7N7MrSX5YnvVvwjs/ZBoIg9IzF/yrqOv9W
lbxx828N5WlT9nVin1TOzF7EOqjaoJxMF/rAXNGgi9cLKE8jXnNFYonznUmS
S547PnL5rcpc9Z0VsS8h4uwVLe1t5TURH/zWdO9tou4lEGn9O+S+vCaDIZjV
s03zpFu2cC5bkSPw6dRa6ck7R8CrptzeXOXlV4R3DI37kNTL77/AvYz5Iq/L
0QR3TKzX8x1VE5QiMAFZzszyscR+8NfIT6B7RlqNUJs8ZZ5qummis3inbmir
gT2DifMr1FhW1nDoEDRRgS5eL6A8jXjjX17mB2fS7lqXPHu4htBUTguOnxrx
v99rN7n/+e3w3lcHxF89PYU/T1f4lZXrHMaOFype7iaHCG+/xbns4aHNchV8
++mC9Wlv5K34qtRt6o43eHVH2p2vvW71rWFesjlD0FmxZPr4DZHLfDNXXGcl
p+4ZUV75K5Ztn8wuyhziFtwmGP6dmckNn62buCqZpaXvLVKNFxH1i/m3Fdtf
vnthh9jnruo077oHsu79uEh4V+35HHpkRBM6dHruWk8ukT0y+ytg/Ot/GfPa
yORXRzz/7txAz7eqPjtWwbmxp2rXrAlcedoK7CtUt3GjxWh0ymJNTm4oCtSw
pONYnLy86pSU6kmTLH/6E0vWSZPYf9mLoXm8Nbp4vYDyNJqNP/NRpaXNJ985
8cPJfU2p/PymZ415xvYtC9orIqlW99tLpwbCXDHvQVsd5nMOl/OjE6S/mity
O6aAiLCR9xwZmfNAhzn/p7xFtwWRO77+UPmpfXu0uMOcnxGlSn7tER++IazD
FXdWsrERucyHaUHu6JwypQmbN8KwMVdJvPGrQ4WDl/Zxf1f8gvZfHW52v+71
i5mxzw9+Nm7lXzQ/LGbqyv8rGhZAxGou2JCuehfL39Neg97PxwZosMs9VMgz
EwXMVfjODDaWlTHLxExLTU5OTUZG9dy5NdnZDgPj+vcP8zOnH35YWxyT/w8u
dxzorHBxqhTM45jFQRevF1CeRtX4f/ON/YH7XXv26+1Jg+1fFPjNwKw/vyhG
M7CDPHiV/Ti/4Z3RNU/zYBcirV3jiKOl8atYc9Rf02Ln3qxs/A3TR0b2K3K3
QyLmiqUegw/Rhcl8vlmHFTmeL4s1Rz/bg7jLlr2b5UyY8WD9suY1TMxdAyJK
ujvSqb+97u20wpel+7wyV4LpSMVhb7+r3HVlynTH3CtF8vzuP9/R+Xxx8DPN
N6a8NYl+I/s4Cr79VFm/mKt56s0nuSW/c97Vgv5KZJeBcf5Nyrcwk9N3URf6
LfsO7RW5u1e4F/WCNVfML1VnZBAGRnmAMh2ey7/jV6xlIJyVs3ihNi+JLl4v
oDyNsvGnenn/JecKIk1zFdnrkCElqfCP/IZ3/UNNFmjGIObHBG/98FDHWNyM
6S4vtrvncHT6VZ46GscGwKbLevdwOE+7XdRc3ZvZk5hhfHZmy6igpzXt7Ziz
Sv8910LI2+40jUffWRGHO2tIRwf2UfXsWe9ltsZEeUoL1qd5+13lxvJSJTq3
46eOD87qK2B1rnV/79OmvwqWYcmGhU5V71l4u+C7mAcTEWT8ytEiuSkDty4V
+DRj5l7uw6I1ml7P36G6i9C04Lvv+rcYoYA1OZn74LK/4gaWZ1n5sWCE5VOm
mhBzvOji9QLK0zjNVes3A8ZGCV3mHLlyNxXONVcl3fl1nBkwZ0PttEAqcyIN
3xg1PiNqUgr7QY5DJVu78jKHtWMOZ+5Cc8e519J9zcTFG5WHJ3JjoTvTkfIy
dpekwS6lmjBWfU4Qy1nThhlmDBa5S+bGeXatUJ+enJUnf8W6YGUmI7IH5Rfv
fHV79p3zrhb3MykmzniOMnmaGWR/j1sSE106kb/8peHQIT+aq2//fSBm7mWC
+ahWIh34d4lXxdj+5fssB+54kSqJDF7dPvcKkayc5kp8hndE9v3cu3uF5l1+
uo1Tx8UHSdh3ptZkqlm0qDo9vS43135++XeoTWOJHCHtfHaRIxH9uA5KsGBV
IXYOI7p4DvUninOzU4clGCTJkDAiddmW4pM1il83nsmfEyu5M8pUWk1nDOVp
nOaq9UuqOtwmdJk8/mNvMhW94l3GrJytroi52jrYpaFm9slws/2BQc25aUZ1
YN8XVbTzZ96eyu1oVMesCI5csbT5C42/u5k3YyZhyeYMOWSTPO7ENFE7w25l
gnd5JHuwXctcrX+IUs8xvK9olgUXitNp4qrkv/9j4Rd9IyraOzaCsa6T/fzM
RFFhZTyF0Wbpq9f46+qHpUYU9Iv4sR0rwMWWvn2rp01jPZR7B9RtQaT4cy3e
tED53jnrZnolyx1zr/zH7jXeisldTj97zXTBrJzmasNn68QLcPzUcboATtiH
WPyvInmjpafjjTRvMX889RU99lyqez7MLzET5ViqJK9Qslody4R696baiuho
dj1zXyI+pKGkhGXLUn1hYSDWb1sGDRI0MI5iCDgxJohfCsbyETdX/rqpX0AX
T1FfvmvBgwYpNmHUM5lZWZmzRzs8Vlxq7jGncaouNY2SpHtGpS3JcuHvBT/W
0XlDeRqnuWqls2KpS4yAAbvV5e7KmcGo8S1dJzNO3Aqe/bhGTy1nqHk6oZyi
/ppWrvhbVrCjUW4BEzdXr21Xj59rxnCQB3BKSx2zli2DeA9tEbyLJ3NVHsUR
0Dl4xZ7O265flZj47Ck8rQ/5rJ+QsPamANp0mReOpYrxj4c9OMk77lCO1L2/
dzORCbNnqx91WNPNQyP29on4snfEP/vHKHdLMcG91eePizp7+xZuEPvY5zzO
Zau/CecHwbjrxJTprU/epAsgw0ygapfBiOxB7hbL0wzmh4kRVZdofGRnrv4V
sxbKHBxLlc4HV2/5ZGNjq268UdwVsK+oJ8vEPt+qyEjV9TU5OT5brMby8pql
S5mbsvTsycpp+dOf3MtPJOvUqSLmyl8roGCuwpGGyvx58VKnxMzdJ+ttTa/U
nix4IdFgiE/fVSm/YD9dmDlQiknddrLe29yhPI0fzdUf7+Zf8+E2dQFGDm/+
laqDo2v3mSsc016qhpo16cxcOZYqkb3G0nebuy1xm6ScwGJdleC7Pv7aZfCB
WH7s7EmZxWKPwFK6ib9WWU6yuXr9wxzV69wW0tl5EefUiPfC9MrbXQP4wjIs
AwfSZf7xz708FuMRzvM6/ZVq7pJ9kZiVkhf8047UYjQ2FBX5YK58SB8U5tI1
Vzwrp9UZmfOA+LueeXsqt/UgvtIqf6U5NDp+asSp60mDkZwsexv2r8hSJSHT
orVOiRgvtQ4a5IO/qsnKamU5LV27NpaVca4ZNMjbghGIl82PN2096OI902Sc
pKSckqqW12qLc/rHSD2XFFqa3JXt+LYpPVv+6w1QnsaP5uotk71bJ+qCzjHq
uzuP1HF3RMclTgV3N1esp3YcjuN52ErV8oubK9UcTcfnOOvM5aQ84YV7L9Ua
G/F5upV5yzUHxLgtZHWqY9pFfAmZZuq1sKO11spdecuS5vyg0lxxuxI5rV2/
yD0f9mU4dymvtzo/Ezoie5B4/+6els8f0hrFiMSegqnEnN7CsRHWH8vpmiue
rfN7qHxwbkpfpzErp4T+SrvP+fZf3E39necNrjq+pRmOaBjiS5VEkmpMjDto
Y0lM9Mpf1Sxd6pdysoLRg13V6em1q1bVbd7sl6VlWNAedsjmynX1VOMh05DY
Fjcle60hptJGr3OH8jROc9W5Q2vNVWmp/asvPf623bX2bw+o765ca6Rsdbkj
V1VaM0SOwNpWe+w0/jKqKavHyQUQ7GhUzidz43zuW26fe7l8sfKsWNabbB2s
YQuj3aaBBAMgdJjz8+wPlrq/vmuAQOv9m9+wLkPcYWp2oHu/2cNKW+v5D39n
0hy8Uo5vCE5MsMuK/1WUtjZVno1aMuvu5542lPT4uVCv2rQJa9L5kTofnBVL
lb3jfVaMSLv7R5z7pYc+NCPDfSJGMFtmqJxv8SoYLDcQmTM3Zgj3JUScuDni
9G8j/nd1RGnniBeTHa+rQmYtWJ+mzD/1KVHBHauqhJcqiSRms5UFsz74IPct
1VP543jO+u6vcta8+CJ79nMdO2pfcMklLg/Vu3crZ+scoRi6dOFKh1AMbYf6
kzvS4qROg5ftO9s8LtVwdv8rgw2GuBl5J+VXzuSnxUqxaXn/Kf0817Q8a9nK
tVt3l/woNIwF5Wm+KSqT44X27+NYUh412XVVRlq049gUsXBSckjMz3bbpRvV
v5L+4PBd7ijXXBlmtPxZLRIDRw7FoEyvf+jYCnjfwiSRvsPOG7RhBo8Vg/3r
Hkuc/UneYe4vubfY9/VOzT88WYfOunXVxaq7CHqepJfuc39RRL3m1js7W3yW
U5Ve3Z7NBJTNuSU+nnuvku7uhR+gfGRBc7U+p9k8sy+A+aYrveutmv7odq65
Etk3oZnmPNfbN9E0EzPbJ2/i31S1wTPh+VhutszzVP3yFy2ZXHH5zj+Llop7
srZcR/55l3Zpf+gYsfq9pcrrVav6DwiL799hKzk5h3rE1xppBjBhTqM5njlL
GRnsGuvUqf4qpGWwY8a/bM8e9kNrCikIe69jDRtRHgQRbXPUHy9YlhwnxSfN
eGVt7qa1OTOTjDFx494+eK5B/n1jqWmIJBmMxi7KnYKGB9Jz/3mOZ7A0thhK
0tELhu+//88LS87eHdfYOcZ2d5xt6mQre0X+FbNVYx6vaVlBnehxHorZHjmO
AZ1Yhs6bPp9xbuB99T2Mjexf9rPzpiq2bTvRYsAU+/tEYuCsflSjqN98VzTi
JaElMXu/2ZO/7xPNX7GclRMW/0u458d331WV/LUt6jVO7ml34g2eCs/8FeuY
lBdPXjlWmT8rnshTpLz5lPuLQsNW5xO7V6+FHb31AwvfeU5ZWpEbHeyqzoTp
r8zk399/z83EfG3ze4koE0SqnD5dvpdx/i3Me/jc6x1ZsSxmzqXicj32yjBP
v2Jf9bOXi963/JMWxXbs+ZC4oyPbyzx8927gF/iFDc9z2xYm4JnfUKUti3dp
ab8v/b7jc7+T8/dK/JMrVvj8SXGVPDNggOBbzkVFqRRgzYLHYSV/pDODBrG7
sKKKv+WcJB0rKuJ+du5UbN3qMdvrr//fE0/89NZbrIZqvpe9zt7OPiaWlF9R
v6PZm8NckdSc3P/muDiDQq1e497Yd359u81SuKQnM1OJc3NLTlSz1+rPHNu/
Pj2xk2RIWrz3FG2vLmTld3zkmIxzd0F/e9MR6ClaETkhsh9nv5hhWjLtrLrc
7ksJnWuumgevUoY778idr3Ef/Ilumst44lWPHZkyWWutn3/3mbgzcV9pQMd0
4vpD1TTZwnfnqvIfmtVPlSfrkrbf3xId6L+3Xfn16L7uk4xeDcj4ED8qWjGd
d7Rp5ErkRv+72mU+9OX3X1Q9b92WLdxM5PgbIptJNZNzsc23/z7wzKRf+tzr
1eXlffT1NnG5yv9b5r6dM7pp5IfZRfH7qhZjT/vbeM3bOWzPlVQ+/+lAlTZz
03yRynu08++4Ba4vLFS+xTl4tXCsd5+az5+UpyTPbXm1RY6lxvKWhXANRUV+
L5UqVac5Au2eHjbMq3epVpSJYLNaObHZ77zT02yg49OJilJebPnTn4K5nfBC
7uJ51FTsWpRo6JSYvn7/sTP17IOuPvn9ruVj4rokLthZ0eSvbNWnf/rxp1NV
yq2CNmvxisEGKWbKtpOku7pAlP/2gD1pSItLiWlnH59MeaGom1xdzTT+fjE6
EPrmTT6WXBkWPrJvsfN2dJgm9zkmObEuLGHRndxn6Tj3t/amc5BVr9M3VR5L
YefN3NFZVTUNXimvdz/Gzv2gW/N1Gvmc+bXaZ3prrpjP9GrDoHJ5mLi5qlLM
5I5fOdr9m2BJSODm8Gl/7wY9VEk5qXHssx0+5yP3HSJadZsfKYeb0BRZ5CQC
VVL1cTP+PsXdWYkM66kGTp3plQ+W2gVoKC4WKa1lxAjVG1fveF2kdihTfUEB
sZvPh+TcZOdttsqVV/5dBqb94IWFPqzgsgovD3MichdLhw7uq/qrPc+BBs1f
XSBdvC9Y9mb2NEj9XtpvVZqkuorcqTFS//T8Ex6tk2pHoQcuBOVff61VC9G5
sQvkFJWcrTkOxtLiTN8Lz+rrhLHnzZUijijrI/59h3a1rbxae9hKNlciz9I9
I0q+u+p1erhMtQ6WXq0kMjenvF658NiJc7E6U+P0bz3mc+Y3Ln2lV+ZK7qxZ
1+++2nnYy4m9XRf2yPGslCVsNlfXXCNyL9lPMm/mHjvULubQzNd7saJMnaKj
lbdjPYVv+VgGDpRzeHDZAPprNjSr3zffuQTyYuo5LdawBZzFw4J9FjP5zs+O
fU/K+94lks83PTUKrBnWVZOazEwhrbp2dX+v+az5k/TRoo/c1ICLHHsnnpwL
k7wN72C5+275jd4OefmQrElJIptwNd7o/Zk4gmODFlYkhb+qWbyY/uACEYXV
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
GussV/eunzuU7mhcK3ZWXpvxfQcVIJd8zW+pZiU+in7uaFYjer1/s3L1K71e
A/0Kay4N+dCQDw35MCEiGvKhaa1c2a5VbInjop8qa7rjPHl33ZSud0+9IM0v
GsslHKy/G/qNlpUml7zYnehytTzBHvCYlVe/WrcuzB9HcVhzaciHhnxoyIcJ
EdGQD01j5cp5b8Ho1YZL7svnPMuV3XF9X3V2NLc6v75fpQWcIpe81zj2QI8d
//U63aykh7W+PsyfSFlYc2nIh4Z8aMiHCRHRkA9NY+XKOYeoPt00eVLMp1z5
P0E1csk/+P/6tqnFMX3cE8cf/EHugzuKxP/4l/uNwZSr8aqqMH8iZWHNpSEf
GvKhIR8mRERDPjSNlauJlrJHuZgNxlb3aT+fcmUbNO+L4ZZn1/SotYST5JL3
aVZiofKZfuHN/8VuVihXmod8aMiHhnyYEBEN+dA0Vq5c96xZ/c8Nd6Vp1b3L
lbW9MiOB45+qaL+n4jJKgilXD+76qf/cVi99H+UKkA8D8qEhHyZEREM+NK2V
K/toe+Uz8Ryv31RY1dg5ZO10lyvrUOf7lXmP8RyfkHeOOcNnGDDL1Tcebg44
Jfum7KDKVaTPeYU1l4Z8aMiHhnyYEBEN+dA0V67sdmGgxbgr3uNGzXzSP/6j
nnf+Z8yqrDdahibYLzL75JL/xkJXueL3bJa75c3b6xnNyrIn4m/ljDWXhnxo
yIeGfJgQEQ350DRYrhzGBxzTpmdvTY6fLFiOudPPttyxzoGDVk5yya/5B1e5
emjfV+TK1bd+qrv2P2Sb1ej27cJoxN9tEGsuDfnQkA8N+TAhIhryoWm0XHma
sM6ZQuVJLvn/XTJZrr4gV67cI9vvG/mbv/FqVtHRY0ajBpqVHWsuC/KhIR8a
8mFCRDTkQ5sH5WqOkkv+R1mT5erzdLkSH3bnfXAmmpommps1MCu7J6y5NORD
Qz405MOEiGjIhxb55WqkpeK59PT0XRUtjqFUEy0Vu9IZXE9VmVzy39sc7JGr
v973hTAvczhhzaUhHxryoSEfJkREQz60yC9Xzjsyu+7O7JoklMFzUlH1yCX/
46kjV1+iy1X0/i+HeZnDCWsuDfnQkA8N+TAhIhryoUV+uYpUcsm/fsw5K/vf
XWeeE9Tn/1V4FzmssObSkA8N+dCQDxMioiEf2nwpV9aRYYv6N2v2JJd8zW+d
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
tWlFhrF5SFCgXPl8hVmuFn9N6Q85h3Xgn0Uk5ENDPjTkw4SIaMiHFvnlaqy7
8bTJVNc27FVlBMvAre5bd4Z9hktdN6XrgxzQLpUrjovbVPpev9V1ZlAYajZm
rOD4J8pahsNfrsTH/IE1l4Z8aMiHhnyYEBEN+dAiv1wNNxqSOS7T1O1VmBxj
rzj/wVchlCtp6BSXWNIw4jnmynO8usyYK+f5xGmMuUK58oQ1l4Z8aMiHhnyY
EBEN+dBQrmRJA9r9DkBJR7Sc3clzWoZJwljzkTXTuloQ5coT1lwa8qEhHxry
YUJENORDQ7mSJU3FkHDA3O85ccNEv/lAAhe3peKazXUUK26z8er41BNG2oxP
8r7zMwSAMVc0rLk05ENDPjTkw4SIaMiHhnIlb6L/oiGFj11fXNfrGnMlWPvf
K90Ux/FPGttGHF+QZmj3nMK9qzonYZoztDPLFaZigEnIh4Z8aMiHCRHRkA8N
5Yoi3LlYnMpzvPtqQde9BQvO3XC/wMTdxpfXi19b9bTh+Fum4y9krIrh4ncZ
WwamcW9BZrmK/evgFlsTsObSkA8N+dCQDxMioiEfGsoVg2P6d2N+eorecd+c
lPR8o7mt3/unJ4bba8vy0pP1PJ+0aZf4hI67zGZlD5Q895eMcrXlfwW92JEP
ay4N+dCQDw35MCEiGvKhoVypxT/5JzYzytWrr6iypOrAmktDPjTkQ0M+TIiI
hnxoKFdq8U/+ww+oZhW9WJXFVA3WXBryoSEfGvJhQkQ05EPTSrl6yth8o9vD
jZr8OC4uzfiHbi9/MKbFzdlyJXr1FZkb3/x3+6X3w7+MasKaS0M+NORDQz5M
iIiGfGhaKVehmMPlSvTmm46DVJ7NKinRcVBrvsGaS0M+NORDQz5MiIiGfGgo
V2qhk7/0vr3mt47HJx+HbYnmFqy5NORDQz405MOEiGjIhxb55SpSIXka1lwa
8qEhHxryYUJENORDwy5eLUiehjWXhnxoyIeGfJgQEQ350LCLVwuSp2HNpSEf
GvKhIR8mRERDPjTs4tWC5GlYc2nIh4Z8aMiHCRHRkA8Nu3i1IHka1lwa8qEh
HxryYUJENORDwy5eLUiehjWXhnxoyIeGfJgQEQ350LCLVwuSp2HNpSEfGvKh
IR8mRERDPjTs4tWC5GlYc2nIh4Z8aMiHCRHRkA8Nu3i1IHka1lwa8qEhHxry
YUJENORDwy5eLUiehjWXhnxoyIeGfJgQEQ350LCLVwuSp2HNpSEfGvKhIR8m
RERDPjTs4tWC5GlYc2nIh4Z8aMiHCRHRkA8Nu3i1IHka1lwa8qEhHxryYUJE
NORDwy5eLUiehjWXhnxoyIeGfJgQEQ350LCLVwuSp2HNpSEfGvKhIR8mRERD
PjTs4tWC5GlYc2nIh4Z8aMiHCRHRkA8Nu3i1IHka1lwa8qEhHxryYUJENORD
wy5eLUiehjWXhnxoyIeGfJgQEQ350LCLVwud/I3b13Mr9uz+v0+Lj3fePxm2
pZo7sObSkA8N+dCQDxMioiEfGsqVWuSSHx0bXVP8dw/t03k+/mb/fzn/0e/D
vITqwppLQz405ENDPkyIiIZ8aChXapFL/ps/+wufZjX5ON/ybpgXUkVYc2nI
h4Z8aMiHCRHRkA8N5UotAZP//tFNcs1KfPz1vj8J/3KqBWsuDfnQkA8N+TAh
IhryoaFcqSVg8g/t+zxRrsTH0eoXw7+oqsCaS0M+NORDQz5MiIiGfGgoV2qR
KVdUsxIfywrny+8Lay4N+dCQDw35MCEiGvKhoVypxT/505feZparb+7/M1WW
Nvyw5tKQDw350JAPEyKiIR8aypVa/JOvfv83zHK1dP9XVFna8MOaS0M+NORD
Qz5MiIiGfGgoV2rxT/7DjiZmuYoveECVpQ0/rLk05ENDPjTkw4SIaMiHhnKl
Fv/kR8dGmeUq49V/UmFZ1YA1l4Z8aMiHhnyYEBEN+dBQrtTin/y1G63+berg
Dt17SbrG5bpX/0n3rZ/q/k/Nq6osbfhhzaUhHxryoSEfJkREQz40lCu1BBjQ
XudVro5u0w39qW5Y5/H4vO7THVtUWdrww5pLQz405ENDPkyIiIZ8aChXavFJ
fv9e+wNfnZqK4d8e865VHo+RRx5Ra5nDCWsuDfnQkA8N+TAhIhryoaFcqcUz
+YsXHM1KfDy4/SWxWX3rp7rh+2TLlfgYf/ttFZc8PLDm0pAPDfnQkA8TIqIh
HxrKlVo8k39wkatcPbBk9KGf6m8+SDUrx+PPtD/bFdZcGvKhIR8a8mFCRDTk
Q0O5It0x5yZx/jYY22zSE2yD5n0xAZ6RZmyz0C/tmbyrWTkfi//u+vAXv8Ao
VzrdLH7ouQFrLg350JAPDfkwISIa8qGhXFFsrcYNMVx8Wq7BW3l9tyA9w9Jm
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
ck52ukaDC9b+y8aMFV5DiNxzC2yt/A/3bjrIqRikew2vzjnZ7rqMzz7e3yRN
m+BfrnZWXidnEw+hXAU1FYOL60bJnOeRLmnY1fKk5dFeh7+cN0R2TPnw44qP
Jqdi6G97uzCF56K3vdHuNRVDcOVK6DRlxHtPxj75LWnYlXPIvuuOzB6cR6Wc
5OqTdOwrwOE7AAAACIG1p7HiJ8m8+zK61CfTn0pNcv/vqixjY6/3QS2phDgm
Ak3PLTIY8nel6MX68d30JxI8249z4LfY2dIPGA4bG3rddSh1b356PDWJqDDa
dHQ975w/IX1vkeGF/MwNeo6Pf/KpJ2I8X146yRWzKn2fwXC84Y7MNXYhlSv2
JKJuUr3hOI/L8dxnADn/KQ4snWcKPCYRdb1soElEg7xbkPOKRa/J2CdJsXBc
wLmqHLdmTnR+V2bAld1jFBkAAADMiM3S3Xy24lBuZlqy2JQc3SIr1/Crd/5w
0xLgAIdg7W0yHcrelOQ6DsKv2l3RcsN1d5vJFmK9WX/kR47epX8833xr6kRe
V3+H2ZifnqIPfPsb0b3eppOHsrd4FLw3WvrfM3gNxRKsXXVHshy9S5/8vFmZ
cmVn3f5magmdF9xx3NbK61OLLp0BDHTIyD4+0Ha2LO8HqZO3vzGeben3v/1N
sLdidM64PjkzmCf3TQZ9bo7js9hyA66cg94DLT8AAACEiWAZuNV9Z5ieUdwl
uFFSXmyWgR7Hy09/ATXKOZep4i3I2dmm5jUFAACAuW0a5QrkTPSbDyREZ1f3
KhimYzL5oKaIBwAAgDkB5UpR420V25I2G6+SA/pDIPSfy0tYX1Dfi2oFAAAQ
IVCulCVYWso3JR4wBxjWPg0jbcbtiVMTbgAAAMDcN9bdeNpkqmsbxpVoShnt
brnSfH1IgUJkvdP2h+aOAfReAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAJFg7TpX8v2f1/ZNTP81bNdO/Gj/v3w0ICi3
WAAAAAARSGxWv81b94PyD2fYi8TXeSfn4e0vvt+jWL8SRroumY7m/XDjyiU6
nS4qbm1aZmH5bxq7LDbHdy1NR9OOXJlBH5yzrJdKFuuYohav/M7WzP1HTvyu
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

     "], {{0, 415.8}, {479.4, 0}}, {0, 255},
     ColorFunction->RGBColor,
     ImageResolution->120],
    BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
    Selectable->False],
   DefaultBaseStyle->"ImageGraphics",
   ImageSize->{325.5, Automatic},
   ImageSizeRaw->{479.4, 415.8},
   PlotRange->{{0, 479.4}, {0, 415.8}}], 
  GraphicsBox[
   TagBox[RasterBox[CompressedData["
1:eJzsnQ1cFVX+/9nd2mrtwbbsabfaVRkukZHZjTBLyaetJHWNAkuzIp9WU0t8
Bk1FpScsQitSw7/aFmHkLynShIryoTUUW1uupbuCVCakAhd5uvd/hrkOw9x5
OHO5D2e4n/fr+/KFl5kzZ+Yc5vu553zP9/z18Wl/H//bkJCQZ84n//z9sdkx
Tz/92NxRXcl/4p56ZtKEp55MvOepmU9OePLp2x//Hfnw/8ixvcgP/M9OAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAOBPmn7ev2V18tiBFo6zxIyetXLL/uNn3I/Zm/PSzPgYCxcZMzYl
a1vZySZHIOoKAAAAANBZqP/Pu9PvaRVXc9PS09NmxVs5jotekF8pUWJNR/Nn
D+G4yIHjF6anr5gVF81xfeJXfVMDIQY6zM6DxQs2JYUvDCEW+Ww38m/8K8M2
FmZXna4KdNUAAAAAn1Jny37CQjRV5p5q1+hWY/Wul0dYLFEztla6VFZjZf6c
KK73iJV7TgufNB3Jmx7DWUZn7j8VqHqDToC9wS4KMHcbnGbd/0NJoOsIAAAA
+IyG/ZlDI7ghL++1Swa2HD8XpQzlLJNzjja0/vdIzmNWLip52/Em8YiGg2+O
tFj6pe2q83uVQafh+fdT1TSYqMQqfikPdDUBAAAAn+A4mvOYhYtMLmo/qtVy
qmhhJNdvev4xIs4cx/OnR3CWx3KOSqcgBf02dFVpAyYmgSccqijT1mCCEakW
6JoCAAAAPqHFlj2SU5NhkSOzy1pcx7gNfAlDZJELi061+LPCoNOwsTCbRoYR
C3RNAQAAAN9Qtyutn8VtUOvU3vS/cy551k6SSThRlBzDcWOzbfUaxXMAqGCZ
dimlDAsb/JdAVxYAAAAVPtEqnRghDIzrPzG79Oyyx8bq/dkToyycl2SY7+oO
TI1GcL7MDlWU+bQm6KXAFKCjAvZBL/UAx/HPUmN7c66EFS8smTbSyvV/ctbE
gZBhwJewMymJXgpMAToqYB/0Us9w1B4u2vg8n5rVEhM3ZVHWdtvPu57vpxMb
dix/ej/d2DC0CFCj6nQVjQZ77aMMX9cEvRSYAnRUwD7opV6i4WjOZEv7lZIR
0/OPG18piRYBGugOiA1Os/ohiSt6KTAF6KiAfdBLDeOoPrh9S96WPeWN0rxh
R/MmRXMRs/KFRGHCosjoxUXVzeIRjbbsBIq8YWgRoI2GEhudMdw/ScPQS4Ep
QEcF7INeapzag1ljLFzM9Lwjrtysjrqj21bEWiQ5811Z9PskZH/X6DpGyO+q
n0UfLQJ0OVRR9tpHGTPXT33w5Xvve+HOxNdGP/9+6s6DxfYGu38qgF4KTAE6
KmAf9FIPcJzes3JEb46Ljpu1It0Vom+JmrjhYE1z20GNh3Im9ecsQ8evWJuT
tyF94lAL3Z6SaBHAPuilwBSgowL2QS/1DEdN2UerUsYPi+K4qGHjU1Zt2X+8
yU1gNVXu3tQaxs8fszBr+/e1FOnz0SKAfY4cORLoKgCgDzoqYB84fdZAiwD2
gXcDpgAdFbAPnD5roEUA+8C7AVOAjgrYB06fNdAigH3g3YApQEcF7AOnzxpo
EcA+onerKHfmbXZZhT9SZQBgAMgwwD5w+qyBFgHsQ7xbVZVz3hxn9yvbGfmk
yue5YwGgBTIMsA+cPmugRQD7fPfd/wbcIddggpHP7X7KXgaADpBhgH3g9FkD
LQLYZ+7sOkUNJo6JAcACkGGAfeD0WQMtAhinqkpVgImGqUnAApBhgH3g9FkD
LQL8A1FKeZv5kStiacudX31Je6LNpi/D9u3zZdUBoAMyDLAPnD5roEWAHyCi
y107TZ5AtdqRRoa9stL39wCAHpBhgH3g9FkDLQJ8jaIGow+wl8mw1MtK3uma
S2ztpQVx3arEz2XDa80lJY25ucSaiosdCOIHfgEyDLAPnD5roEWATyEKSG2R
o2CrM/VLuMPaQo6cfXlZxXnDa0NCpPbhJdkDrrBLFR0RYHXD5YcRPeaHmwVB
DmQY8D/Nhw6dWbWqPinpTGoq+Vn3eDh91kCLAJ+iMRQmDojp8sbrvxINJlNW
opV2SRIHxJqKi9UOO5OR4fvbBUENZBjwJy3l5e5fOetuuYV8rnEWnD5roEWA
T8nbrB/ZpRshRrzbzxb520Zqr/yxmJSz9Z/2OqtV47DmkhK/3DQIUiDDgN8g
Wqv2+utV33VlZWonwumzBloE+BQaGWaz6RTy43vvaYgrYhXnDefXS6YUaB9W
n5Tkl5s2E4cqyt7anpX42ugR6YMezhjx0gdpOw8W2xsQTecJkGHAb9TdeafW
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
A0IJ/AzgVfrKSsi1RTk8JUA52ScdEJs8gfe5T781SfFIy4yJ7tcKe0I/GYJl
9v3SU2SLCLTPJZJDd25CsNmXl0llmNpIoCzWRVGsEndWGap1LVIl7Ymh/BE6
tdXOrM4v/SDuUs8Bycy65Po933xa920pvwy/pOSHPVWrM50zY6s+j5ginlh1
FX+uhh6bu2GGrDK6Y1k0s5PiSklydVmDErkrrY8HYeFRS/9KKZnURGNHZFjx
t5+REoh6JF2i7FZ5S5FPlkxUnU93ueYhQ+oiI5X7yfvv1/XuTflWqbq6Xbcc
knabtEfZR492P6XmD/w4s+JgmtR0l6+eeeml2ssvV7g1ut2RpCFhounerxil
r1asURlmTzT8FUAGTZSg2rlw+sZpri5aHM1ZomfnVzYJkqq5Zv/r8USWJWTb
GoVPWk4VLYzkYpKLThgtHS3iLXT/KDoiw5wGQ0DdL7o+m0pZ3XErf7D75z0i
q3oOKeEScvlBrbOJEQR0V0IJJl3Hd6DUOXXNkxoHW+c+KquA5R/JFFe5RDx+
UYo8TF1jAb72UimZSWWYtnKQ+mJ3GUYc2alL9C/nHnEttR+765xeFxfnVIdm
bZf7mNi/lyfJImHsDz1Ue/317uce41SHQdwHo3ST9tMMiBGpdueyCLUBRnEk
x7OA8IdevpdSMqmlRFuak0JZgru93lpn8c+NPNglk3iF8GJiyPqHeZFZfaXh
94PH9tNf2zTtAyuHtvWoRx/VPffzoar6XJCaatTFxGiXrB34oTZurx2iX3t2
npe8QLTq5t/YsPqnntK9itq5cPrGObk7bRjHxWWW1rZ95jiWP70fZ5mcc7Sh
9f/1tuyx8mPoQIt4i/rUVO0/io7v+EaTvNHdhHQZYx82MMbVLjO50vY0fNR9
qEvlSPNYaphUhi1epfCdVKpP3n0wJDc6/Z2uuRO6uUKPLNOVtzWUmXiJtOXy
p5f42mi1s4gvo3+eogzbt08/W5oYASXLpUDc0K/daK+Y8bhq+bXn6pxbd+ut
at2puaSE5urEuUud5p6H+xrqfj/crFzzpOypsvp4rG1EHHZ7/bPP1lpv1ajP
t/2voow0c+edzzdRSia1bBgFe/PdDxYjA4UhpqSpvLJyn0h9o4CPp3xre5b0
Q6IQtEfAfGfiSOmUN59w9SjqQSHZeJpoGgOeNF8Z1FL0CCiGHZKHnBMXcvpC
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
AvVlO3ELbC8p0NVO9In0dYvaWJjt1abwH/BuwBSgowL2MZ3TZ4Wmn/dvWZ0y
PtbKcZaY0TPTNhYdOe1wO2Zvzksz42MsXGTM2JSsbWUnm+SHuGOuFqHJTDUn
yfXDoQsSPdNgxGx9DMgwYtV3RWkcVjd8uOLt6K6UHJ2hfKIi4t7lHY/2Zw14
N2AK0FEB+5jL6bNCU0Xh0gcsnMUaNzMtPT198fiBFo6LmpJ98GSbzGo6mj97
CMdFDhy/MD19xay4aI7rE7/qmxo9IWauFrHZ9GVY31v5f1MvK/FYgxF7jmKA
69AtbQqn+J0MjSOby1QnFsWksh0UTkSgbvtKK+DfvDOSTng3YBLQUQH7mMvp
s0FzddHiaM4SPTu/0jW61Vyz//V4IssSsm2NwieNlflzorjeI1bucY2RNR3J
mx7DWUZn7j+lXbq5WoRGht0Swf/78cVZHmuw6ot7cAm5peEjtA9bNqFN5Gwv
KWgqLq6zyudAySfkc407sjfY1VY4UkbUEwEmbkgUGqucs4JcQiNbBfvAuwFT
gI4K2MdcTp8NTu5OG8ZxcZmltW2fOY7lT+/HWSbnHG1o/e+RnMesXFTytuNN
4hENB98cabH0S9tVp1m6uVrEbtfRYKGjCu6ZXEB+OH7uHR7KsN+ds+iKA6SE
AVfY/3t+gtphhfe00znCzo+OqqqG7Gxxv0jys4Mi7wMRSB/szB2cZpXORVKO
g7mnS+3ZvyxsalsSV1Ks+9IA0wHvBkwBOipgH3M5fTYQZNjYbFu95MMTRckx
ogxzHM+fHsFZHss5Kp2CbNifOTSCG7qqtEFrYtJ0LaKYraLnwH+HJ18v1UW1
v/+NBxqs5jcXV7z9BZFOsX9zCkrsywtXyI458aeQjMfbabCk9VO9cmtEyx2q
KKOPySeiVC1lffdQO9Fj276iXWXJOPBuwBSgowL2MZ3TZ4Cm49uS2004Oh1N
R/OmR1ksI9882CqxWmzZIzm3gS9hiCxyYdGpFo3STdciRHvcYW0/ApawOXzh
b2TTcLW/pRn4Cvl6QEhFmMs+HXJTd8ne00SM2Wy8fV9q/+6drHWPhGxMCMkb
xScKK+3L29YRfLaKO1LDhbGmdkNhqamNBQWOjiSOp2DbJzpjg/S7cjMOvBsw
BeiogH1M5/SZoKly16pJUVx03OxXN+Xl5by1YvzASEvsisLKM62/bjlVtDCS
ixyZXdZeb7WOmMmH0eRwKhxhmH37yu8d3CwojeywDb9c2zbwVfOHkOIhrcnt
z9WXYae6ymOoHnzisNpFC997syL8IvdCjv5zI/ntj++95/6r04MHl+/c6bvn
MHd2nbYMu8Pa4rurAwAAYBk1/+5DudJpOXN879qJURbJU+wduyT/cG1z6287
KsN8WHFf8u0B53d3L1HUV1VXh5y+SF+GlVnlMuz/dijP4jmqqtzD70U7s3q1
2q/IWTThYZ4hRuZrWOfgCAYZgBlARwXsY16nHzjOVBauiLX0jk15d+/RU01E
EtQf/65w1fioiKiJGw7WNAetDDuVma090qUrw4QNhqSmlrL+TIZWPoraLl00
fkvO9dET0JVhA+7w0ZX9DbwbMAXoqIB9zOv0A0bdrrR+Fm7Iy3vt0kj7xsq8
GRGc9bGcIw7V2LDW1ZSdLjZM4NghO33gvaIdvkkhsYPa5Tp4LR8FiSE2DACm
QEcF7GNSpx9AWiUWF5lcdEr9c2GlZMT0/ONBsFLS3mDfuD13+WMDdMVPBaf6
q+PX8fFjlHm6msvKOijDNNK3duhRaKyUbDWbzReXDQDwbsAUoKMC9jGd0w84
yskonI663c/34yKGZu5vzVjRuigyenFRdbN4QKMtO6Hz5Q07m+z03Qf1xc+h
3iGrx7nNTv425D+3KWiwvy1J/P6w8pgVszKMsG+fqgbL2+yjawYAeDdgCtBR
AfuYy+kzgaNy2+yBnOWBpYUVbblZa0qzJ/bnLGOyDgo5XYUs+n0Ssr9rdB3x
c1HK0M6XRV9MOL/uESoZpibYdt/dTomFTU3qHmon0uWrL5Wvy+akpEBFufOh
UfKQMLUbMSnwbsAUoKMC9jGX02cDR1Plp0tje3P8ht1z+T0ll0yJtVo4rv/E
7NK2LSMbD+VMIsJs6PgVa3PyNqRPHGrpdHtK7jzYtlPPpBn64qcgVmvQ7NAt
IWH/SOEScnvcXi7VMPv2KVy6PjXVYw1Wn+SPzRyJGCPSa9snnWciUgq8GzAF
6KiAfUzk9JnCUXu4aOPzM+Nj+KQV1tjxKau37P+5SXZQU+XuTcIxUcPGL8za
/n2tngZzmqdFvj/kvDd5qXQaseYCHf3zzV06B7zyx2L3ubyHRilcvaW8XCNh
BRFaGlch5/r9aXU24N2AKUBHBexjFqcfPJiiRV58nhdI4cmh7fLk/0ZHZdV0
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
64BbU+2JH3/86WT7SUh7SeaI3npBZd5vkQ925mrLMGKHKsq8e1HQuYF3A6YA
HRWwT7DIMD6nxKdLY6NjU97dW1nXESnmOJrzmIWT5KZwfVy3+/l+XMTQzP3q
QfnCasphabtPapQPGQbYB94NmAJ0VMA+wSLDmo9sezU9PXlsVGsq+5i4JzzP
G6YSoi+MkkUmF51SPVPIYuFvGba9pEBXhlX8gm0lgQHg3YApQEcF7BMsMqw1
Rl8HyrxhwirI6MVF1VLR1lxdtDia6zN606EWZ0N5/jKi6lK3VTjcT/T7pGTV
6SptDTY6Y7h3rwg6PfBuwBSgowL2CRYZ5k2aq3elx1p6xy79tNIVG+Zoqt6T
Gd+HszyRbasj/238/+3dD1xU953v/2m73d7HXe7vXve2t+vezd78aj33ZHGX
+mPnwZL6S2Rzo0kVlTT8FJvywFYRU/sDm4hJN0AaxUjI7finaFtD2/GXGFtK
QkNFrVKptSKJRDFRC0lwA4oRhUD4Jwyc+c3MGWCA+T9n4HtmXs/HPPIwMHPO
ge/34eft9/s939NkTpMlOXnHSec2+zZ32k7uSJblxPyT07xE36b49UIvMezE
+WOanxGRjeoGXaCjQnzEsGAot8++kGrLWc47JbduTHY8U3LbyWuj41xq6JIk
Y0r21hdNphe3ZqcYJTkh4yf1nb43rND2Yjs6rLt/1C9/b63bDPbjI3u0PR2i
AdUNukBHhfiiLIYplq7mumO/3L/TZCrKe9K+Fmzwo8v1l28Evmhf+eRqjXlr
ZrJ9qtOWtYpeqWnqnDjXONTVVPOKurGYFJe06omig2daB7xs+eqkbYtca7Uu
/KpjI/25/VK6eWwT1w2bDN/9wcNj42DDjY1KP5u4wl9UN+gCHRXii6IYpvS1
nHhxlct+qo61YL31pqWS/HD2/jM3Qt7LQhMatogtWK38+oRnSq7/QuvZ/3NT
r8HgfP3DP/Z97Wtj/9u3fPlQeblWZ0cEo7pBF+ioEF/UxDB1QZckyStyf1pR
U3fElDrfEcMGb9T9InfpfPs+YPsvDsz0VVo1bZHjv5uQwXb/9enbnzWOZzAP
r/61axkZg3dUN+gCHRXii5YYNnTFnBYvxa576VKXY8yrtSLTOHZnpNLz9t5V
8VLcM8c7/NmxIrw0bJHcJ8czWOoXOvzJYOrrzh4WjMEbqht0gY4K8UVJDFOu
HkybsLfqhBhmtVraq3JjpUVbT3fO0AWO07BFFhjHY9jv/9MePzOY+lI6OrS6
DEQeqht0gY4K8UVJDHNsG2bMrBjbpHRSDJv6hhmjYYuoAWxOXMeX72+8/Z/+
MaAYNnSMXSzgEdUNukBHhfiiJIY5triPSzE3jt6pOCmGjXTXFMRJ9+UevzlT
VzhGqxZ556J1zr+0yk+uVm+NDCiD2WMYa/XhGdUNukBHhfiiJIZZ+8+ZFsVK
D2yrce5gPzGGDTUdXJMgyY+XtXh+IOR00apFNj573nV/MGIYNER1gy7QUSG+
aIlh1qG2qqcSJElOLvjV2abbAx+OxjBLT8sZc87DsuR7f/vpoUmLdHzSMa/g
7yc8vPv/CiyGDZ8/H/plIFJR3aALdFSIL2pimNWqdF0++OQD49uGuYp7IOfV
yz0zf5ukVaMW+enRkkm75e/5VgAZrG85T5mEN1Q36AIdFeKLohhmZ9/Z/qAp
L3NpwugWrkszcotfqWnqEmPvVqtGLbJg+z1Tn1tU969+D4U1NoZ+DYhgVDfo
Ah0V4ouyGKYDmrSIp6d4H17hexyMDAafqG7QBToqxEcME41GMewvPCWxVbmG
X/0/9tcv7zbv/uvTT37+vV/+l/Lf/kv5UHm55fTp0E+NaEB1gy7QUSE+Ypho
wjoa5vpyfc6R7XXmT6GfFtGC6gZdoKNCfJEbw/ouH3w6MzNz48HL9pX3w5cP
bsz0wfnWGaZJi8x7NsZXDPvUpBhW8Vrop0W0oLpBF+ioEF/kxrDeetNS+xp8
dXMwxy75Prjuqj9zNGmRrzz3N75i2KcnxbCi50M/LaIF1Q26QEeF+CI3humV
Ji0S/9zfBTopyWgY/Ed1gy7QUSG+aIxhyrBleHR7Ckvv7du9AoyBjZupGHbh
QuinRbSgukEX6KgQXzTFsKHOy4d35q5OSnCZfLxRkSnFJaU/Z65rEySMadIi
S1+8byxuVTxqOPuv9tcLmR5j2OPrQz8nogjVDbpAR4X4oiaGDX9S/6MVji30
5a/tH1+K33natCrJ/mU5Of9YiwhJTJMWefbQ07ag1Rxn6P3UxJ3BPmv41crR
GDa3X81gC79qvdYa+jkRRahu0AU6KsQXLTFs5L2Dq+Ml+dGth/88ZcP8oc4G
c1aCLCVuP/3JyMxcngtNWuQ3teW3/7vHPVorHrXHsC/f32jLYPtKrP39oZ8Q
0YXqBl2go0J8URLDlKsH0yR5QdHZPvffH2qr2BQrLdp6unNaL8sdTVrkRurD
3nbL/5Qh8wn7aNj166GfCtGI6gZdoKNCfFESwxz7VRgzKzzOvfl8w7TRpEV6
/+IvvD+06N/v+bsvfdHa1BT6qRCNqG7QBToqxBclMWz48v6HpbgUc6OHSceR
7pqCOOm+3OM3p/e63Ai9RUZaW30/v/uzMcQwBI3qBl2go0J8URLDrP3nTIti
pQeeO952Z+o3lZ6GlzISJPnxspbB6b+0SUJvkeHGRt8x7FOfXvhVTa4X0Yjq
Bl2go0J80RLDrAMtFbkJkiQ/kFNyuK7pWueAfZ3+yEDX9aazr72QcZ8kzU9+
4Uyn4vM4YRd6iwwdO+ZPDHv5gCbXi2hEdYMu0FEhvqiJYVar0nW57Jmlstvn
GM1f+lTl1SEBQpgWLWKpq/Mdwz79GW6QRNCobtAFOirEF0UxzG5koO38EbMp
Lzt9qdEWyOKSUr+TZ/r/jrx9fUCICGY3TWvDPv8FTa4W0YnqBl2go0J8URbD
dECbOyV9xbC+JUtCPwuiFtUNukBHhfiIYaLRpEX6jEbvMWzk/fdDPwuiFtUN
ukBHhfgiN4b1XT74dGZm5saDjicXDV8+uDHTB+dbZ5gmLWJLWV62Duv/xjdC
PwWiGdUNukBHhfgiN4b11puW2n46o/ocb8f2rD4YXR75PXO0ahHLm2/2fu5z
bqYjly/X5PiIZlQ36AIdFeKL3BimVxq2yEhHR/+6db2f/7wzgD3wwJ19+7Q6
OKIZ1Q26QEeF+IhhoqFFID6qG3SBjgrxRW7R77+8P218ntE+KSnEIyN9itwW
QeSgukEX6KgQX+QWfUcMi80yN/bYtwQjhgHaobpBF+ioEF/kFn2lv2HfCvd7
5kfFEn0gfKhu0AU6KsQXyUVf+eRqzStFuY/bN6NYl5oky8al34ySDSuAsKK6
QRfoqBBftBR9JiUB7VDdoAt0VIgvWor+yI36ysqapu6Zvg7foqVFoGdUN+gC
HRXio+gHa7j36qlXip5YlRQnyUmrcvdUNNycvLLMcrO+7IdPrkqSpbik9Pz9
xxu7LL6fIK5Vi/T3W/93sTUx3voV2f56ZJn1rbc0OTBAdYM+0FEhvsiNYWHd
sGK4s+5Hq4yyZFyVW2QyFT2Zavuz/Gjh6Y/GY5alpWrLIkmKeyCzwGTakZua
KEnxq/a+3eMriGnSIufess79W+uXvjj59c3VoR8boLpBH+ioEF+Ex7DwbFih
dJ7MT5SlxGeq2u6oX7C0VW2xfWVBcV2fGrOG2qqeSpDmr9j55ifqFyxXK3KS
JHl1SYOPidHQW+T996xzZrvJYOorPS3EwwNUN+gDHRXii9wYFr4NKwZbyh63
hbANFS0uI1u9F0tSJSm15GKv4+RXy9YYpYS84+1jR1QGL7+UIssLis72eT16
6C3yv+73mMHU16VLIZ4B0Y7qBl2go0J8kRvDwrZhhXK9KmeBFJtb1e4xtCnt
VTmxkrymzDWoWQcbShbHSov3Xhz0NjEZYov09/vIYLbXI8tCOQNAdYM+0FEh
vkiOYa40nJTsO1u0QJZSzE0jHt8y0mROkaYMfKlDZHEFNd2ePxlyizQ1+Y5h
8v8I5QwA1Q36QEeF+KIlhmm4YUV3TV6cJK/5VXNb3UH1Tknj0ozc4ldqmnud
o1wj3TUFcVJcirlxYt66XZOXJEnp5qYBL4f3NGV61T8nT97wGcO+/LdWP48G
AAA04am+a5BMooljpEuKffSb30iINSZv3GoymYqeTreFMen+LPNFx/0Aocaw
UC6vo8P3aNicvwnlDID1KoMM0AM6KsQXuTFs4Orx/SbTr+q7XNd7KQM3/lxf
f/Fq16RlXa0VmUY/l+irMcy++0TJm52j+4ApPRfNWfdL8jf3X+6d2RhmQwxD
uFHdoAt0VIgvcmNYb71pqSRlV9xwjVaWGxXZkrTUVN878c0BxDClpWyNLLns
TeH8cl9d8QIpdnFJw6DHtWGOtf1hXhtm9SOG2V5AKKhu0AU6KsRHDHMIIIZ5
WqKvjpLF5dV0j94pGZtT1T7td0paiWEIP6obdIGOCvERwxwCiWHqoFbiczWd
rtOdw501zyVK8asPvmdPZ+pNkRPeoww1mdOmZd8w3zGMSUmEhuoGXaCjQnzE
MIdAYpgtcZ01Jcvzk7dVtznXhimWzjdLVsVL8rfNTWrIUnfRj08zXxlSP6Tc
rMlfPD276PuMYf/z70M8A6Id1Q26QEeF+IhhDgHFMFumun32hVRZkp13Sm7d
mOx4puS2k9fGDzD0XtmG+yV5ceaOn5VVvGzKWixP1zMlfcawhK+EeAZEO6ob
dIGOCvERwxwCjGFWdYt+89bMZKP9KUgp2UWv1DR1Tv60pa3uYPGTq5JkKWFp
ZsH+E+/3+spgVi1aRP4f7KKP8KK6QRfoqBAfMcwh8BgWNqG3yHfW+4hh5p9r
caGIYlQ36AIdFeIjhjlEVAy7ft2+T76nDBY/z/7cSSAUVDfoAh0V4ov0GLbO
fPHajXHXLprXSdLircc/uDHB2+b0+IiJYTa/qXCfxO652/r+e6EfHtGO6gZd
oKNCfJEewwIRQTHM5oP3rakpLndH3mV9fL21s0OTYyPaUd2gC3RUiI8YFqkx
DAgfqht0gY4K8VH0RUOLQHxUN+gCHRXio+iLhhaB+Khu0AU6KsRH0RcNLQLx
Ud2gC3RUiI+iLxpaBOKjukEX6KgQH0VfNLQIxEd1gy7QUSE+ir5oaBGIj+oG
XaCjQnwUfdHQIhAf1Q26QEeF+Cj6oqFFID6qG3SBjgrxUfRFQ4tAfFQ36AId
FeKj6IuGFoH4qG7QBToqxEfRFw0tAvFR3aALdFSIj6IvGloE4qO6QRfoqBAf
RV80tAjER3WDLtBRIT6KvmhoEYiP6gZdoKNCfBR90dAiEB/VDbpAR4X4KPqi
oUUgPqobdIGOCvFR9EVDi0B8VDfoAh0V4qPoi4YWgfiobtAFOirER9EXTegt
cuStN7J/ti5jb+qTv3j8j+/8QZOrAlxR3aALdFSIjxgmmlBa5O33zn3lB1+8
p8Dg+vrnrXdd+vd3NLxCgOoGXaCjQnzEMNEE3SK2DHZPwWcmZbDR12c+aPtA
2+tENKO6QRfoqBAfMUw0QbfIV37w3zxkMPvLuPVuba8T0YzqBl2go0J8xDDR
BNcitVf+5CWDqS8GxKAVqht0gY4K8RHDRBNci3xjzwqfMezF15/X/GoRnahu
0AU6KsRHDBNNcC3ylee8zUiqr3U/Xq351SI6Ud2gC3RUiI8YJprgWiR+69/5
jGFfNy3W/GoRnahu0AU6KsRHDBNNcC1y3/PzfMawwl/maX61iE5UN+gCHRXi
I4aJJrgWee6X/+Yzhp1+l61coQ2qG3SBjgrxEcNEE1yLvH7m12Nx6+mNht8l
G04+bNi+3vC//m08hp1rrNP8ahGdqG7QBToqxEcME01wLXLi/DH7vZDrDD3/
0dBrcHl91nB8qTOGvXW5UfOrRXSiukEX6KgQHzFMNMG1yLVbrZUpEwOYy+vD
WHsMm/MvrRWvaX69iEZUN+gCHRXiI4aJJrgWUfr7ez/1KU8xzPYqXXnvl75o
tb2O/07zS0bUobpBF+ioEB8xTDTBtUjf0qVeMpjt1fPZWWoMW/hVa3+/5leN
6EJ1gy7QUSE+YlgwlOtVOQukqVLMTSOjb2mvyomd+o64FHPjiNdjB9civX/5
l95jmO2lxjAGxBA6qht0gY4K8RHDgjHSaE6JkxLS80wTlZ6+oYy+pcmcIskJ
6c9MfMeu0tNtitdjBxnDvM5ITophrBBDiKhu0AU6KsRHDAtGd01enBSXV9Pt
8R0j3TUFcVJSXs3tQI9NDIP4qG7QBToqxEcMC4JjpCt2cUnDoMe3DDSZ0yUp
teRib6AHDzKGfeYzTEpi2lDdoAt0VIiPGBY4pa+ueIFkXFN21fP0Yldd0VJJ
frysxXNS8yDIJfp33+0jhn3qc2MxrKMjiDMA46hu0AU6KsRHDAucpb0qN1ZK
euZww8WaCnPJzp37Xz1c886NAZel9+oa/ri8w40N9reY9uw/+Nuai20D3peF
OQTXIkMVFd5j2Lt/tYkZSWiF6gZdoKNCfMSwwPVeLEmVJGNSktH1Hkg5+dmK
pm5nzhpsKFkcKxnvTzLKLm+Zn5xf0dQz7P3obm7AdLjqyyef/rznobDPrvv8
dVsGK9za4/M4AABAc57qe/hzS4S5XZOXJEn3ZZiOXr49oFgVS09LfVlBsmxL
YqaznY6U5VjDLyWsNR2zvWXEarW95a2y/EdkWxJ74Uyn1zGx4FrEcvq099Gw
3/5n88KvBvXjAlNcZZABekBHhfiIYYGz9N7+6MZHXRNnGLsbSlbL0oKcquuK
+pYbU97Sf75kxXwpNreq3eLl6MG1yEBhofcYdu1zy9+uD+LAgBtUN+gCHRXi
I4ZpRBm8uHexJC8oOtvn8T3qbObSorouLwcKMoZt3uzzTskgDgu4RXWDLtBR
IT5imFbU/Vq9xjB1FwtiGHSP6gZdoKNCfMSwQCmtVfmZmVmFxyfuhq/ePqlO
Sg62Vm3PzNxYePzahLeot0+GZ1Jy0Gz2nsEGCguDOCzgFtUNukBHhfiIYQEb
umJOi5fkR7edvDYapxRLW/W25PlS4nM19iX6ylCTOc2+Yn/HybY7ox+703Zy
R7IsJ+afDMcSfaWjw3sMGz5/PojDAm5R3aALdFSIjxgWuNHQJSUkZz9nf1Dk
1o3JRllKWLe3/vZowlJDlyQZU7K3vmgyvbg1O8UoyQkZP6nv9L1hRXCXNXTs
mKcMdmfPnuCOCbhFdYMu0FEhPmJYUBRLV1PNK8VPrkqyRS05afWTRa/+qbVv
4ijXkP0tRU+sSoqTpLikVU8UHTzT6rrFqwehtIgtifUZjZMy2KDZHPQBAbeo
btAFOirERwwTTYgtovT328LYUHm5/XXsmMKDixAGVDfoAh0V4iOGiYYWgfio
btAFOirER9EXDS0C8VHdoAt0VIiPoi8aWgTio7pBF+ioEB9FXzS0CMRHdYMu
0FEhPoq+aGgRiI/qBl2go0J8FH3R0CIQH9UNukBHhfgo+qKhRSA+qht0gY4K
8VH0RUOLQHxUN+gCHRXio+iLhhaB+Khu0AU6KsRH0RcNLQLxUd2gC3RUiI+i
LxpaBOKjukEX6KgQH0VfNLQIxEd1gy7QUSE+ir5oaBGIj+oGXaCjQnwUfdHQ
IhAf1Q26QEeF+Cj6oqFFID6qG3SBjgrxUfRFQ4tAfFQ36AIdFeKj6IuGFoH4
qG7QBToqxEfRFw0tAvFR3aALdFSIj6IvGloE4qO6QRfoqBAfRV80tAjER3WD
LtBRIT6KvmhoEYiP6gZdoKNCfBR90dAiEB/VDbpAR4X4KPqioUUgPqobdIGO
CvFR9EVDi0B8VDfoAh0V4qPoi4YWgfiobtAFOirER9EXDS0C8VHdoAt0VIiP
oi8aWgTio7pBF+ioEB9FXzS0CMRHdYMu0FEhPoq+aGgRiI/qBl2go0J8FH3R
0CIQH9UNukBHhfgo+qKhRSA+qht0gY4K8VH0RUOLQHxUN+gCHRXio+iLhhaB
+Khu0AU6KsRH0RcNLQLxUd2gC3RUiI+iLxpaBOKjukEX6KgQH0VfNLQIxEd1
gy7QUSE+ir5oaBGIj+oGXaCjQnwUfdEE1yK1l09/e1/aPQUG2+v/3h6757c/
7PikQ/NrA1RUN+gCHRXiI4YFQ7lelbNAmirF3DTi8jbLzfqyHz65KkmW4pLS
8/cfb+yyKD6PHWiL9A/2b/p5lhrAJr2yf5Z54vwx2xsC/PEAH6hu0AU6KsRH
DAvGSKM5JU5KSM8zTVR6+sZYzrK0VG1ZJElxD2QWmEw7clMTJSl+1d63e3wF
sUBb5Ee/NbnNYGOvB4uM1261BvNjAh5Q3aALdFSIjxgWjO6avDgpLq+m2+M7
htqqnkqQ5q/Y+eYnau6yXK3ISZLk1SUNnj/kEFCLdHzS4T2DkcQQDlQ36AId
FeIjhgVhpMmcIsUuLmkY9PQO5WrZGqOUkHe83TL2pcHLL6XI8oKis31eDx5Q
i/zvih3+xDDb65mDm/0/LOAd1Q26QEeF+IhhgVP66ooXSMY1ZVc9TTAq7VU5
sZK8pqzF9R2DDSWLY6XFey8OepuYDKhF7n/+H/2MYbYXi/ahFaobdIGOCvER
wwJnaa/KjZWSnjnccLGmwlyyc+f+Vw/XvHNjYHx1vmO4bMrAlzpEFldQ0z0y
+ZAuAmqR2IK/8j+GvXetMcCfFHCP6gZdoKNCfMSwwPVeLEmVJGNSktH1Lkk5
+dmKpm7HONdId01BnBSXYm6cmLdu1+QlSVK6uWnAy9Hd3IDpcNWdewo+7X8M
q3nz924PAgAAws1TfQ9nYolIapq6L8N09PLtAcWqWHpa6ssKkmVbEjOd7RwO
PYb5fyn/UPAf/I9hrNKHVq4yyAA9oKNCfMSwwFl6b39046OugQkrvLobSlbL
0oKcquvKNMawf37uLj8z2Oo9ywP5GQFvqG7QBToqxEcM04gyeHHv4tH1YB7W
hjk2fdV0bVjp7/axMAzTj+oGXaCjQnzEMK24Ri/1TsnYnKr2MN8p2T/YH1vw
OZ8ZrPby6WB/LMANqht0gY4K8RHDAqW0VuVnZmYVHm+bEKbU2yfVScnRmyIT
n6uxLxVzfm6oyZym9b5hVsfTJD2lr9hn/4qHSyIcqG7QBTpqoDytIYd3If7O
tWq+aDF0xZwWL8mPbjt5bXRvVsXSVr0teb5L7lJ30Y9PM18Zcr7lZk3+Ys13
0VfZktj85/5mUgZL251MAEOYUN2gC3TUQBEJgkAMm3ajoUtKSM5+zv4oya0b
k42ylLBub/3t8RGyoffKNtwvyYszd/ysrOJlU9ZiOTzPlFTZEteJ88eeObjZ
9vrxkT0NH5wP4iCAn6hu0AU6aqCIBEEghs0ExdLVVPNK8ZOrkmRJkpNWP1n0
6p9a+yYnLEtb3UH1PQlLMwv2n3i/11cGs9Ii0AOqG3SBjhooClAQiGERhhaB
+Khu0AU6aqAoQEEghkUYWgTio7pBF+iogaIABYEYFmFoEYiP6gZdoKMGigIU
BGJYhAmuRZ7Ns375b61f+qLz9VWj9YP3Nb80wInqBl2gowaKSBAEYliECbRF
Ojus8t+PBzDX19Znw3SNiHZUN+gCHTVQRIIgEMMiTKAtEie7z2Dq68yfwnSZ
iGpUN+gCHTVQmkeC/n5rU5PzNaOGO45unm0wzM6tdrN3Z3d1rv17m492DE/9
pk/EsAgTUIscrfKWwWyvuf89fFeK6EV1gy7QUQOlYSSwBbCXD0yoRwu/aq14
TavD21nOFc8xeDCn+Jxl4rudWevp6smPdR7prn7aY0LzAzEswgTUIsY4HzHM
9gI0R3WDLtBRA6VVJLBlsMfXuy9Jtq9rZaSl+kfFkxVlL5lliJE3Hbk5eaPO
W9W58QbD/JyjNyZ+5+PabQsNhvjc6lvBXQYxLMIE1CJzZvuOYTW/D9/FIkpR
3aALdNRAaRUJ9pV4q0rajolNoFw/uinRYNx6qnPq9KLSV7t9nsEwK6tyQkLr
O7NtXoy7UTJ/EcMiTGAx7G/sXbrkr//w4X9I7f3UX/UaDJ98erbtzy/81zfH
Ovzz28J3sYhSVDfoAh01UJpEgo4OH4MDC79qHy4LA8vNo1tkQ1L+qXb3j6xR
E9es7MqbYxOWzmwW9IyklRgWcQIdDTvxf+yzpa+pL9vX1Q7/zsXwXSyiFNUN
ukBHDZQmkeDCBd/TNOFYsa/cPLJJniVvOdHh8bmB6vzjvKzKa8qErwQ/I2kl
hkWcgFrkN39/yG0GU1+v/edDtt5u+4cJoC2qG3SBjhooTSJBxWszEcOUjtrC
RYZZG8qvD3l50+CF3fe6zksOnt9176xQZiStxLCIE1CL9P7F57zEsN5P/SVL
9BEOVDfoAh01UJpEgjN/mv4Ypgw1li6PmZVY/Gaf9zequcs5L+lMZaHMSFqJ
YRHH/xYZOnbMWwZzvMr/+bdhvVpEJ6obdIGOGqjpWRtme2m8Nky5Wb3lXl9D
YaqeC7uWjM5Lqn9euK3241BOTgyLMP63SP/q1T5jWOd9K8J6tYhOVDfoAh01
UNNzp+TLBzQ5yTjlevmaWYbZOUc9rwobN9JYukidl7zjGBmbt722z4+PeUYM
izD+t0jfP/2TzxjWm5AQ1qtFdKK6QRfoqIGann3DtL5N8s4HBx6L8X+Z/ciV
0kWzDbOyK2r2LTLEzNt2xsc8pi/EsAgTQAx7+GGfMazvn/85rFeL6ER1gy7Q
UQOl7S76Rc9PzmD7SsKwVYUaqwJYZq/Gtrvi4+XQZyStxLCI43+LDP78575H
w2RZCc/+LIhmVDfoAh01UJpHgo4O+4r9itfs/w3TbfvKh4fSYgwxGeVtfk8t
qh+xC3lG0koMizj+t8hwY6PvGGYwDJWXh/WCEYWobtAFOmqgdBgJhjuOPjHL
MGvBvncCeCy30nwobY5BixlJKzEs4gQQwxoa/Ilh/WvXhvWCEYWobtAFOmqg
iARBIIZFmAAmJX/2M39imO0V1gtGFKK6QRfoqIEiEgSBGBZhiGEQH9UNukBH
DRSRIAjEsAjDpCTER3WDLtBRA0UkCAIxLMIE9jCjL3/Z9xL9Y8fCd7WITlQ3
6AIdNVBEgiAQwyJMQC0yuHevz6EwNqyA5qhu0AU6aqCIBEEghkWYgFqkb/ly
bzHsC18YCdNGLYhuVDfoAh01UESCIBDDIoz/LTLS2upzRnL4/PmwXi2iE9UN
ukBHDRSRIAjEsAij7fat7N2KcKC6QRfoqIEiEgSBGBZhNI5hrM9HGFDdoAt0
1EARCYJADIsw/reI0tHhM4aNtLaG9WoRnahu0AU6aqCIBEEghkWYgFpkYPNm
Lxmsb/ny8F0nohnVDbpARw1UOCLBe9ca1ZfmRw7EcMfRzbMNhtm51d1Tv9ld
nWv/3uajHQE8l3IMMSzCBNQiSkdHn9HIUBimGdUNukBHDZSGkaB/sP+Vk+YH
i4z3FBjUl+3Pv6nVfLnynbbaX+QukQ0OMcZvFVde6VHcvdGZtZ6u7h6Z+I2R
7uqnPSY0PxDDIkygLWLLWlO3rbBls+HGmf2nByIZ1Q26QEcNlFaRwJbBNpau
HQtgri/b1zU5hcOd65Wb7QlszqL1ec8Xb/tearwtT8VnlTdb3Lz5VnVuvMEw
P+fojYkx7ePabQttn8qtvhXcRRDDIkxwLWI5ffrOnj0DmzcPFBYOHTvGlq0I
K6obdIGOGiitIsErJ81uM5j60mpMTOk4sUWOMRifOdp2x/mVnnO7l91tkJ89
NXnIy/7Nvtrt8wyGWVmVN11zWN+ZbfNi3I2S+YsYFmFoEYiP6gZdoKMGSpMC
1PFJh5cMps5Ohn6W0cnE2YtKr7jkJ8vNyuxZhsS8U+62LlcT16zsyptjo2XO
bBb0jKSVGBZxfLaI0tFxZ8+e/rVr1WcVDZrNClvlY3pR3aALdNRAaRIJGj44
7z2G2V5arNi3tJWvNxjmpJe3TPjqueI5hruWH3jP3QIxdf5xXlblNWXCV4Kf
kbQSwyKO9xaxnD7t5o5Io9H29Wm7QoDqBl2gowZKk0jwm9ryaYlhyp1zxXEG
w+ycox3jkav30r5H7IvFis+5Wx6mDF7Yfa/rvOTg+V33zgplRtJKDIs4Xlpk
+Px5b88tYk0+pgvVDbpARw2UJpGg9vLpaYlhVuvQpdLldxtiHtryau2HPcNK
z7/Xvvp0UozBcwwbzV3OeUlnKgtlRtJKDBOB0n7xyBtv1LUOTfhaVU6sNEVc
irnRe+b20iLeH+TNLmGYNlQ36AIdNVDTszbM9uof1OQ+MsXS9rv8pLsM4+av
Tl8220sMs/Zc2LVkdF5S/fPCbbUfh3IRxLCZNtBSkZtgC1h5Na5xeqTJnCLJ
CenPmCbYVXq6ze2OJmM8tYg/jy5iozBMD6obdIGOGiitIkHx64VeMtiPj+zR
5CxOlpsXjr6yr7h4V2n57y/d7KktvHvKgjFXI42li9R5yTuOkbF522v7vJdl
H4hhM0oZai7bkCBLk2PYSHdNQZyUlFdzO9AjemqRofJynzGMeUlMD6obdIGO
Gqjp2TdMo6EwWwC71Xju3LnGWy4DX+oA1/J9l/o8fmrkSumi2YZZ2RU1+xYZ
YuZtO+P5rX4hhs2kgYv7V8XLRmP85Bg20GROl6TUkou9gR6SGAbxUd2gC3TU
QGm7i/4zBzdPHQfTLINZRzegSCyq7VYfQqRYrlfmyDExy0sbh7wMcN354MBj
MYa74uPl0GckrcSwGaR01u9MkxM2/fLwj1Imx7CuuqKlkvx4WctgoEdlUhLi
o7pBF+iogdI8EnR80lF7+fRvastt/7X9WduDW60DH5Znz7U/wyj9mReKX8hb
lzQnxjB3Xem7Xd5nGZUPD6U5VvKHPiNpJYbNmOHOs6ZkOSmn4uod+zKwiTFM
uV6Vs8D2pcONDTUV5hLTnv0Hf1tzsW3Aj9YOeon+wObNmvxggE9UN+gCHTVQ
+osESldjZXGGcbYjVM02ZhRXNvrIYI5PNR9Km2PQYkbSSgybIUr7sacSYxOf
OtauqKvxJ8awwYaSxbGS8f4ko+xym+T85PyKph4fD3Cfenelyvb3Sdvhw15i
WGtt7VUAAIJFJAiCWqD9/PW6NdM/gQ5ZrlbkJMnJprOd9kzlJoZ11+TFSVLC
WtOxy7cHRmwf6Gl5qyz/EdmWxF440+k1qbN9K8R3lUEG6AEdNVBEgiAwGjbt
+pvLNiXIaTvrnXnKTQyz9N6+ceOjromTkP3nS1bMl2Jzq9o9bGfi4M/DjAbN
ZvtTvB2vofJyHmaEaUZ1gy7QUQNFJAgCMWx6KUNN5jQ5ftXet3tGM5abGOZe
78WSVElaWlTX5eVNtAjER3WDLtBRA0UBCgIxbHqpG4J5lmJu8rhLvrqLBTEM
ukd1gy7QUQNFAQoCMWx6Kf2X39g1cWd8U156giTJS7N32P5cevqGMthatT0z
c2Ph8WsTJiXV2ydDnpQEZhzVDbpARw0UBSgIxLAZN2VSUp24lOTkHSfb7oy+
607byR3JspyYfzKUJfqACKhu0AU6aqAoQEEghs04d2vD1NAlScaU7K0vmkwv
bs1OMUpyQsZP6jt9b1gR3ssFQkZ1gy7QUQNFAQoCMWzGeViiP9TVVPNK0ROr
kuJs30xa9UTRwTOtAx7XjY2hRSA+qht0gY4aKApQEIhhEYYWgfiobtAFOmqg
KEBBIIZFGFoE4qO6QRfoqIGiAAWBGBZhaBGIj+oGXaCjBiocBWi4sVF9aX7k
iXqbT1UevtDu4R44ZaD5j68fvnDL4y1ywx1HN882GGbnVrvZArS7Otf+vc1H
O9ys7iaGRRhaBOKjukEX6KiB0rAAKf39Q+XlfUaj63P3bF/R6viT9Z3ZNi9m
TvE5DxtCfVy7baHB87ftnFnr6eruSau4R7qrn/aY0IhhEYcWgfiobtAFOmqg
tCpAtgzWv3bt1Ccg214DhYWanGICy0dv7v7GLIOnnHWn/c2SlZ6/PepWdW68
wTA/5+iNiWNmjghniM+tvuX2Y8SwCEOLQHxUN+gCHTVQWhWgQbPZbQZTXxqO
iQ03HtqYunCOwWlyznJ+O8bDtydR+mq3zzMYZmVV3nTNYY5xNnejZE7EsAhD
i0B8VDfoAh01UJoUIKW/30sGU2cnQz+LaqSl+kfFdkXZS9wMd4186PXbU6iJ
a1Z25c2x9zmzmacZSSsxLOLQIhAf1Q26QEcNlCYFaPj8ee8xzPbSfMW+5Vzx
HC85y8e3x6jzj/OyKseeRehjRtJKDIs4tAjER3WDLtBRA6VJARoqL9dtDFMG
L+y+13VecvD8rntneZmRtBLDIg4tAvFR3aALdNRAaVKALKdP6zaGjeYu57yk
M5V5mZG0EsMiDi0C8VHdoAt01EBpszaso8NnDFP6+0M/kSvNYpi158KuJaPz
kuqfF26r/djLB4hhEYYWgfiobtAFOmqgtCpAA5s3e8lgd/bs0eQsrrSLYdaR
xtJF6rzkHcfI2LzttX0ed321EsMiDi0C8VHdoAt01EBpuG+Y68atrq/+tWs1
HwqzahrDrCNXShfNNszKrqjZt8gQM2/bmT6vbyeGRRhaBOKjukEX6KiB0nYX
/aljYgOFheHIYFZtY5j1zgcHHosx3BUfL/uckbQSwyIOLQLxUd2gC3TUQGle
gEZaW4eOHRsqL7f9V+no0PbgrjSNYVblw0Np6p6vvmYkrcSwiEOLQHxUN+gC
HTVQ+i1A2sYwq9J8KM32Ad8zklZiWMShRSA+qht0gY4aKApQEIhhESagFvn1
nw790w/++p6Cz9he/1Dwlwu23/PMwc0/PrKn4YPz4btCgOoGXaCjBopIEARi
WITxv0W+8oP/dk+BwdPLlsf6B8OyEhKgukEX6KiBIhIEgRgWYfxskX/6wX/1
ksHU18bStSQxhAPVDbpARw0UkSAIxLAI40+LFL+23WcGU1+/qS2fhmtGtKG6
QRfoqIEiEgSBGBZh/GmRf3z2v/gZw1bvWT4N14xoQ3WDLtBRA0UkCAIxLML4
0yL3FHzKzxhme03DNSPaUN2gC3TUQBEJgkAMizDEMIiP6gZdoKMGikgQBGJY
hPEvhn3azwz2r88bp+GaEW2obtAFOmqgJAQlxN+5Vs0HTfjTIv/w7H/0M4Yt
f0b7B9kDVDfoAh0V4iOGicafFvnqs8l+xbB/M86J6wjnU7wQpahu0AU6KsRH
DBONPy2SUvBDvzLYv7R+6YvWpqZpuGpEF6obdIGOCvERw0TjT4ts3dFxT8Ff
eclg8uaVc+I6bBmMGIZwoLpBF+ioEB8xTDT+tMjeEqu0ssJjBstNVQMYMQxh
QnWDLtBRIT5imGj8aZFnvm/PV3O/fuye/NmTM9h3N7tmsIVfnYZLRtShukEX
6KgQHzFMNP60yOuvjQctWxizRS/b639+a9+XRicix17HfzcNl4yoQ3WDLtBR
IT5imGj8aZHODuukuOX2ta9kGq4X0YjqBl2go0J8xDDR+Nki9xp9ZLCjR8J9
pYheVDfoAh0V4iOGicbPFnnnorcMtmdXuC8TUY3qBl2go0J8xDDR+N8iJ3/v
PoNlfNPa3x/Wa0S0o7pBF+ioEB8xTDQBtUhTk/X/3TgewL72oLXitfBdGuBE
dYMu0FEhPmKYaIJrkWutjIBh+lDdoAt0VIiPGCYaWgTio5dCF+ioEB+9VANK
+8Ujb7xR1zo06euWm/VlP3xyVZIsxSWl5+8/3thlUXwejBaB+Oil0AU6KsRH
Lw3ZQEtFboIkxeXVdLt+2dJStWWR7csPZBaYTDtyUxMlKX7V3rd7fAUxWgTi
o5dCF+ioEB+9NDTKUHPZhgRZmhzDhtqqnkqQ5q/Y+eYnau6yXK3ISZLk1SUN
3R4O5USLQHz0UugCHRXio5eGZODi/lXxstEYPymGKVfL1hilhLzj7ZaxLw1e
filFlhcUne3zekhaBOKjl0IX6KgQH700eEpn/c40OWHTLw//KGViDFPaq3Ji
JXlNWYvrFORgQ8niWGnx3ouD3iYmaRGIj14KXaCjQnz00mANd541JctJORVX
7zSZJ8WwEftXpgx8qUNkcQU13SNejkuLQHz0UugCHRXio5cGR2k/9lRibOJT
x9oVNXS5xrCR7pqCOCkuxdw4MW/drslLkqR0c9OAlyNLAAAgaoQtqkQux3p7
Odl0tnPYatU4hgEAAMCD/uayTQly2s76TnWNFzEMAAAg/JShJnOaPGEHsCkx
zNPasOtVOQt8rg0DAACAO+pIl2cp5qYR552SsTlV7YHfKQkAAAB3lP7Lb+wy
TZSXniBJ8tLsHbY/l56+oYzeFJn4XI1j8Zj6Qccwmu99wwAAAOCnqZOSo7vo
x6eZrzgfNKncrMlf7M8u+gAAAPCTuxhmC2LvlW24X5IXZ+74WVnFy6asxbJ/
z5QEAACAn9zHMBtLW93B4idXJclSwtLMgv0n3u8lgwEAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAA6plja68teeGJVUpwkP5Ce99Lxpk7LTF8T4Ep9UuoU
cSnmRp5VjxmntB0vzNpe1Tro5nuWm/VlP3Rs4RiXlJ6//3hjl4U9HDETlGvH
CzflV304uf8p16tyFnh6SjXCT7G0VW1JlO1b7j/3oqnoyVSj7c/pexu6+JsC
4nBsUywnpD8z8Ymqu0pPt9FRMdP6mszflqV0c9PA5O9YWqq2LLL9e+GBzAKT
aUduaqLEA00wM9RHS7v7p+tIozklTkpIz5v0xGr1KdUIN6W1alOSJKftrO90
/L4VS0tFToIsr9jX0E8DQBAj3TUFcVJSXs3tmb4SwJVi6W27fHJvZoIsuYlh
6uN956/Y+eYn6t+mlqsVOUk83hfTzdJz4/KJksz73c8gdNfkxbl7Fg+mhdJS
tkaWE7Ycax/PXL2X939TlpYW1XXN4IUBLgaazOmSlFpysXemrwQY1VdfkpLg
MoUzJYYpV8vWGKWEvOPtY6s8lMHLL6XI8oKis33TfbmITl31Jd80el3I4Zhr
iF1c0uBuTh3hZmmvyo2VjGvKrrqMfCmDF/cuplEgkK66oqWS/HhZC10Swhhq
rXujwuGVovSEqTFMXdAorylrcZ1YGGwoWRwrLd57cZDpBkyDgda6I2o3/VVR
RqybGKb01RUvmBwDMG3UQYbJA1+OITKGKCEMdQVpXN7hxoaaCnOJac/+g7+t
udg2wN8aEMLtmrykqTFMXdA4eeBLHSKLK6jpZvUzppO6tGNqDFNHY5KeOdxw
0f7X686d+189XPPOjQH65/Rw/7eHOlPMXRIQhTqAYLw/ySi7zAHNT86vaOoZ
numLA9z+Reqp6nn4WxcIL08dsvdiSaokGZOSXKYuJUlOfraiqZt/6YYfMQx6
oHbIhLWmY5dv2/+NZulpeass/xHZlsReONPJ3xSYYcQwiM97h7wvw3TU9ter
YlVsf73WlxUky7YkZjrbyb9zw40YBj2w9N6+ceOjromTkP3nS1bMl2Jzq9rZ
5Q4zixgG8XmclOy9/dGUv167G0pWy9KCnKrr/DM3zDysDXOsLGVtGMSmjqVz
Sy9mXEBrw9SFjqwNwzTzFMPcUu/U45beaaCuzZuUeLlTErrg/h8RwLRzH8PU
f8/G5lS1c6ckZl5AMczDPyIQBuq+YYn5J10W2Kg7QlPdIIjB1qrtmZkbC49f
m1C31FEFJiUx8zzMM6o3RSY+VzO+wEbdyZzqhunnPoYprVX5mZlZhccnPo/E
7RANwsO5i/63zU3OvxWUzpP5ieyiD3GolUuSk3ecbLsz+sU7bSd3JE/+FwQw
Izwt91J30Y9PM18ZUr+g3KzJX8wu+pgJHkbDhq6Y0+Il+dFtJ6+N/oNWsbRV
b0ueP/FfEAgfZai5bEOCLD+QteMXv6p45cWsB+J4piQEo4YuSTKmZG990WR6
cWt2ilGSEzJ+Us/fEph5nlfdD71XtuF++xN7d/ysrOJlU9ZimWdKYmZ4mpQc
DV1SQnL2c/ZHSW7dmGyUpYR1e+tv00+ni2K5UXew6IlVSXGSMTkz/6UTzZ/w
y4dghrqaal5Re6kUl7TqiaKDZ1rZYBBC8Hrzo6Wt7mDxk6uSbIVtaWbB/hPv
9/LXK2aAl7VhisX+16vaSyU5afWTRa/+qbWPfgoAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQLhY6k1GSZKyK25YZvpS
/Kb0tb19xGzKz16XmiTLxqXfzMrd/tOy001dQzN9ZeGlfPLmzhWrXqjrUCZ/
43pVzgLJ7hv7L/dN/ZylpTxrQW5Fy8D0XCcAAPCLEDHM0nX1Yn39n28MTM4X
Uyk9l8q2rJAdmUMyLk3P/HZqUpz6f1LCRvPlLt+HEIfSdfV8ff3lG/7Fo57L
+zPiNlS0TfkJlZayNc7fSOzikoZBN5/trjc9mvjUsXY9/XYAAIh0QsSw3nrT
Ur+uYei9sg33S5KckLn35JX20dQ2MnD7ysmSDQn2JKarMR/1l59ZccOP9ypt
FRtiHzHVd0/5zmBL2eOyFPtA+je+ZvsNLN57cdBN2PL8cQAAMEP0FMP6mw9u
iLVlsA2HmvpHJn9T6WrYmy5L8oKis1On5QQVQAzrrjc9Iq8+2Dzl57YqV8vW
2I6SWnLhLXNKnP0PF3vdHaHj9NaHY90NpgEAgJmhoxjWd7ZogSzFZpd5GO9S
2qtyYiVpfuHpvlCixnBfb7+74aSB3t7hEA7rjv8xrLsmL864puzq1AsbaT64
WlYHwQaazOme5yWVvrriBfK6g813NLhyAAAQuikxzPGFpab62zfO/jw3OUFd
dLU046mdFQ3tFsX1U0bTm13NJ36UtdixLkk2Ls3M339i4jr51opM+/vqJ8Wr
GxWZkvPLzvOP8xTGlL7ThfMlKW7L8Skr1Mfe4lhqVX+p1ZmXfJ/d5Wept1hu
1r+6LT0pzuXCbL+HHkt7/atb1yTJtj+ro0wjA61nDhblZiy1/XLiklI3bn3p
yMX2idlm9JgDN868lPuI0fn7WbNl5xsNzneqydOFtzA20l1TECelm5um5k81
esWlmBtHbO9rMqfYDrWguM5tELVnOec7AQDAzHMfwxZ93/TsClk2Jm/cajIV
PZORZE9a81eUnO93edP87zy5KVF2RJFvZ2Z+c6nR/iY5ecfJtrFM4jsIjdyo
r6z4pSlzgSSl5Jlfq6g41dTrNib0X96fJknxGWX/7vdQV0Ax7Hj93nTbD5yZ
t+NHx68Oj8WwkzV7VxltCTOv6KfHr9pS0J22kzuSZTVWfTNz9AYB+YEnD7re
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
JcU/lLX7dLsIY6CW5vKsBQ+VXvEczIc+bvz9geIt61JTV6bbZOUWHzh2qT1i
exAAQHBDTYfW3Ptg8dluzcrowIfl2XON+dUhFjf7hcXPzfjFuz1Ti+pwT+Ov
chbKtvRhiOQY5tBWnm6PYXPSy1s8vMMRfWfZ3nNXUv7v2qYziTmvzSa1tHFg
+s7rnqPjeekRlutndq+ZO3fNrhONH6u/JUtH44nd6XPnryw+Oa2/NwAA7Prs
A0qJRbXdmk7sDTUeSJPlTUdCmJscul6+YVZMxoEPPBX34Z4LJcuIYU59jaWr
Y+xvi99Q2TJ9eaL7D3my47TyMyGtKtSAYvmwPGuu/WLc9wjl4wu7U2Nilhe/
1THx9zPcXVuUaLhL03+JAADgm9L2xoa589aUf6h1/VH6zr2YaEjKPxXsVNXI
ldJFsw3LDzR7+bxys3rLvcQwldJ8YLk6LrWotHFk2i5uZKDt7WOvH/5j80xH
GEtz+Yb75tztKYYpQ42ly2MMs7Iq3fzTQLlWmTXPELO6tLFvWq4VAACbrnPF
Dxnmba/tC0MJVZoPpc2Ztab8enDHbq9cb6uoKw95HdlR+mq3zyOGqcbW9Md8
t7I9Em9a8Gbgw/LNafteN6fP8RDDPq7dttBguHvloavuOtRQy6E1tl/cvG1n
yGEAgOmhdBzNmT3r3l3nB8NyeMvNyuxZhiW7LvQE82k1e8zefNT7VFd3de48
YpjDWAyb/XR19/QNh4lAuXnke6t/+q4ti3mKYb2n8u6yfWfBttout0dw/vLu
KjjVy8QkAGAaqDHpweJz3WE6gdJWnhETbMwbvrBrfozvNecj75c/9cqlyB77
8S+GjTSWLlIHw9IOaT7HLDTl+tHvfWffu7a03+Iphg1f2rfA/rtZvu+S++Eu
n28AAEBTHx3NjgvvyIny3oHldxkW7AsqJvVc2LXEESvuWphjrv2wO7JHvLzx
J4YpHbWFjhTmZgl6ZLPcPPrMI87V9Z5i2HDH0SfsN5Ia1pe3eehHzl+yvL7y
evivGQAQ9dRpGl+LrywfN/7h0I+Li1/YlpuV7uDYLLTm0q0BP2p9z7nihQbD
Nw403wniApXOPxYm3TW6T+ns+GXfyd/78hvV5xpbOz2fe6D56L7i4q256zNs
l/rYktzXXcrucPNRk+0nycu2fy/960t2uRbr2+cO/ND5M6YutCWeNvsGU384
tOupdPu2sTFzFqZl5+97/dw1Lz+2MnDt3G9Lt2VnpKam2Y+zfkvxgd9P3lVV
vYhtuevHr2FkoOWPB7Zlp339oYeXZxdXXumZdArfMexO24mtSfbF6fMzShsm
fDyw0wXU3MMfnztYXPx8Xva3pv6qnQ3hPO/qJdkVbVbH7hDVLxfn5mRnf2vJ
wkWp65/e/fr5EDc6s09HPrLzLed9vp5imLr0y58YdtfyA+9FU4gFAMwMdQ7L
6/J2ZeiDQ2vm3hW/cndt5+h4ljJw61JFni0dzf1G8R+u+RqhsrSVrzcY4nOr
bwV1jY59ZceTmMve8fErNxe/XN3YMeUCLB83X3jr1OvF6fOnll3l4+b6t04d
Kc11JJZJP3tf27t/PFpemrfMsb4qdfcb5k3L15gqL1zttG8ba+n58MyBnAdj
DLONWeYLnVP3qx/uuXQoZ+Hdc1cWH3Fe1chA+4Vfb3koZu7EnWztF1F36shL
uY6fa07x2c53zRuydp9ovN1x6ln7Nq0xjx34YGJq9RbDRgZuvXtk51pjTMyc
JU+/fO6jyb+QAE4XaHMrA21X3jp1uDT3oRg3CcfeELXVv3I2hC3W9rxzaEt2
wS/fcj7+wHL7Qum6uYaYuVnlHwadxOzTkWtdRv88xTD1nwP+xLDIv+8WACCA
ke7qp2d7vHFMNTaGkJh3qsPl68rAhd1Jti/PzT3qa4NWx8rn2YtKrwQ78Wkf
n6k2F65Pmjs1jNkHf3581t1winKntvBuT2VXuXpo5d0eCq6aG+2jIg8Wnrw5
6ciW1hP5D9siR8yykgsTdpR17p465eu2X+Gl0uV3G+ZuqmyblNycv9s533+x
ePXzp+yxZ6TbRwyzP7cofYLHUh0PeDLMWpKz71ijt2lbf04XZHMrLYdWekw4
ow3x2M4Dz+b++J2JD1boO7Ntnu3XuXBb7ceer9wL1+lIFTEMAKALat6Iyz76
kef3KJaWI/lL5hszfvJW58R0cad2m724ev+4nbryWYvSZulpazxX/ZsDe5/9
7rL4mPEkNndl6btTN3gdvWvQbdn1uJB7PIbdXVh7x00+VbrPFCbOsuWexMIz
49W/781i+xfv3VI9dUuq4Y6jm2cbpt6nMJb35PFN25S+tkvnLzR3Tr4q75OS
ysCtxtOH8h+ZE2Ncue1X59rcbj7iz+mCbW7n5blPOKMNMTtp19tTmkltiCBT
+sTpSNcDEsMAAILrvbDrIYNhYfG5oHaTcBZXX1soWJ3VLWZ9ZXswp/FkZKCz
+VzlrvXG2Y5RIje7boYawzwW44HG0lTHANSG8uvqAJdjt3+Dx20inINFk+9T
GD3RrOzKm77Kvl9L9Lvetc/xGTxMFgdyuqm8N7dfMcztviVeGsIX5frRTY8V
1k66GYEYBgDQBbUw+R3DLN0tl85WV/76wL4f2ldlf3eFY0DK3xhmXxoU+iVP
pljajmwx2sempu6JEbYY5thIwzGsNHpLneOGUxtPG/6rlzJ5S9XRE/mz472f
+4YpH5avcTwDfO6GQx9MyqWBnM4aYHP7FcMCbQjvhjtPFS7Pr+mc/Av3dMA7
zQe+4V8M8z5NDwCAJvyMYY6lWaXPpMbPjjFmbC1944/vNrfd6rEEOBoWTAzr
PFVcfKrTx5ssNytzZruLQOGLYZOHTZz7m9n+f2FqumdZPz3XM+LmRP78ZvyM
YVal91SBej/D7JyjE8eJ/DxdUM097TFM6azJX154qnPqNiieDjg2J7vmUMvU
2yscx3Q+CsqPLg0AQKj8mZQc7nn35Sz7xN/8jB+fcd7gppqGSUnbB31spuHQ
cTR7lru6O20xbGzv+sCiZjhi2Pi1TVnb5s/pgm3uaY5hSvup/DUenlXqeftW
5ximxw4/ep0P7brQ6/+1AAAQFN9L9O1jDvYpv7uX7T43eScrv2NY8Ev0bcXd
n61l1SuZvtEw5c65Yscc5Niv7nrlejmA+b5JJwpTDJv8UB7fpwu+uac5ho3l
Xn+MHbq7Otc+bDrpJtDxn945kBh9z4ECAMwEdcMKL5XdVriz7JNtbhd1T6rL
tkLsob4Hv2GFvbi73NbngXKzMmtWgGvD1L39g4xhvZf2PWJ/w9Ql+rOe8Pz4
yzu3mj64ZQl0eGqU35OS9gedO9LHlOcZ+TxdCM09A2vDPBg9mbsD3qrOjfd8
V6bzzovZudXherIXAAAufG3fOnpzmbt3KB8eSovxJ4aFsH2rWtyNzxxt87ID
vyMCubtTcnSpj5vqr1wvXzPL0082Glc8POJ5dMOKux7cVT9+yr76XQ/eZfAc
GpXuP+QvfL62L8wxzPL+oQzHuJybrTN8ni6E5tZHDFP6zr2Y6OmBmyNNB1bc
bTA8VHzO/YO/AQDQmPowI491efQxfFNDjtLx1ovrlj08b+zJL7bM83X3wwhd
tdsWBPkwI7W43z1n7oPf//W7t92V6eGed3+RMTc+48ClqfuGjW4NmlraOPGb
SvupgvQlD8/1EcPcz82p27fGzM14uXHCs33UK4kxTNowf/xTj20ob3a/aFyr
GObclN6eIJMKTk5ZOOXzdCE0tz5imO26b50pXBJjWPhUddukjNpenW+0/d4K
/zjl1ksAAMLEsdOCh2Efu7FN45MK3hh7QM+td48Ub9r06qWOC7sftCWSpKdf
rTnx6lMbt5+55eYoI1dKF80O8tHe9uKeuOno1Y53y/OXLViSs7v8D+cbW271
WBSrMtB5teH3B55eMve+rAMNk8OSk/qYxVnG3PLRpzqqF//Us0cazqgjP3Mz
it/4w1v1zR+PH2FsNGzN1u0b1hQfHn2W4shA21uHtjwUE3Nvxq7qDwemzmsN
9zS+nr9MNsxdXfjrM42OTykDHVcvHNm7fsWa0skXqQxc+/02x5O4jd+vbLzt
9TmVtxsrv2+0v3X2g7ve7J78yICRgY+vNZ75dXHGvY7xquVbDl3onPJYAb9O
F1xzKwM3f1+YaD/0suI/tk0+sqXrzwfWOYYeF237/aTHcY7YPrkt0TGdm/Hy
n3u02N/3zO5ljptWZ6WXnm9zd0RLa3Xh1+fM+fq2yisfq78lS0djZeGyOfNX
Fp9sC+3plgAABMJyszJ7lvt9NUcpfW3nDpcWb1n/2LKFSanr1m/I2VZ69JI6
NnWnrdact36t/YHXF9xvCaq0lWfEuFm45Zf23+Z85w3nsIWl84Paqpf3Ppud
8fWFc2yFdu7Cld/N31fhYcf4MXfaLzguPnXZktQ1383OztlmdjyGsudcceqS
x9TnVue9YDraPJ4SXdeG2X7213dv+c769WsfW7ZkWbrtR6+s/WDKFveubDX9
D7/cZTvh2NPAnWd0fc+54rnx6tnHpS6c4/FmT59sJ0pdn1tcWnn2g4+n7Mbg
9+nsAmtu269xUfyS1RMfrrRs9FZE23eXLUydcOLHlsTPdZzW3UV9fWF8kINi
9l9UzJSfUX3S09Qfc/RnXJeaujI9LTV1XW7xgWOXfD2UCwAArSkdR3NmBxuT
fFNj3iP7LuloBwA/NqwAAADQQNe54ocM87bXeh9VCo7SfChtzqw15df1NNVD
DAMAANPEcdug730hgjiw48Y03d16RgwDAADTpq+xdHVMYlFtdxDL6D2zb54Q
Z3Tz1D/BEcMAAMA0Gni3dGW8m/0Zgme5eXTLvKQXzrh56p/Qxu8onLXuwJ+7
CGIAACDMFEvbkS2JywvdbjoR+NGGPji0JnG9mx20hNZSnrFw4t12rvf9AQAA
hInjsc4Pbgg5O9kS3e/yl6958cxHuspgAAAAM8iWoE4Wf+v5ao8PRvTDSNPL
3/n+oUv6GgcDAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAA4M3/Dxp7N5s=
     "], {{0, 414.6}, {487.8, 0}}, {0, 255},
     ColorFunction->RGBColor,
     ImageResolution->120],
    BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
    Selectable->False],
   DefaultBaseStyle->"ImageGraphics",
   ImageMargins->0.,
   ImageSize->{292.5000000000002, Automatic},
   ImageSizeRaw->{487.8, 414.6},
   PlotRange->{{0, 487.8}, {0, 414.6}}]}]], "Text",
 CellChangeTimes->{3.8207425369539986`*^9, 3.8207432623259916`*^9},
 CellLabel->"In[1]:=",ExpressionUUID->"52064609-8540-4536-8ee8-e024aea732fa"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Pin", " ", "=", " ", 
   RowBox[{"idc", "*", "vdc"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Pout", " ", "=", " ", 
   RowBox[{"iq", "*", "vq"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"eta", " ", "=", " ", 
   RowBox[{"Pout", "/", "Pin"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.8206928088850746`*^9, 3.820692828493145*^9}, {
  3.820744839404372*^9, 3.8207448395775237`*^9}},
 CellLabel->"In[1]:=",ExpressionUUID->"425ef856-9bd3-4508-a0b9-bfe5191c1d46"],

Cell[BoxData[
 RowBox[{
  RowBox[{"invEqns", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"vq", " ", "\[Equal]", " ", 
      RowBox[{
       RowBox[{"d", "*", 
        RowBox[{"Sqrt", "[", 
         RowBox[{"3", "/", "2"}], "]"}], "*", "vdc"}], "-", 
       RowBox[{"idc", "*", "Rinv1"}], "-", "Rinv2"}]}], ",", " ", 
     RowBox[{"idc", " ", "\[Equal]", " ", 
      RowBox[{"d", "*", 
       RowBox[{"Sqrt", "[", 
        RowBox[{"3", "/", "2"}], "]"}], "*", "iq"}]}]}], "}"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.8206774793790903`*^9, 3.820677571129752*^9}, {
   3.820682351607432*^9, 3.8206823798060184`*^9}, {3.820682539772606*^9, 
   3.8206825508001165`*^9}, {3.8206842221573224`*^9, 3.820684240097344*^9}, {
   3.8206843283478355`*^9, 3.8206843298248854`*^9}, {3.8206849390494995`*^9, 
   3.820684947483964*^9}, {3.820685110246203*^9, 3.820685163300315*^9}, {
   3.820693122640129*^9, 3.820693124255808*^9}, {3.8206931599548445`*^9, 
   3.8206931600645523`*^9}, {3.820693231824147*^9, 3.8206932327596455`*^9}, {
   3.820693473041149*^9, 3.820693473898855*^9}, {3.820693562038211*^9, 
   3.820693563471378*^9}, 3.8206936001921716`*^9, {3.8206938071929607`*^9, 
   3.8206938382768297`*^9}, {3.8206947300025196`*^9, 
   3.8206947301910152`*^9}, {3.8206949293943515`*^9, 
   3.8206949448460274`*^9}, {3.8206951577575235`*^9, 
   3.8206951856274977`*^9}, {3.820742940799028*^9, 3.82074298506886*^9}, {
   3.8207432230816655`*^9, 3.820743234462294*^9}, {3.8207433009015603`*^9, 
   3.820743301838931*^9}, {3.820744880784712*^9, 3.8207448863359394`*^9}, {
   3.820745465064251*^9, 3.8207454727249336`*^9}},
 CellLabel->"In[4]:=",ExpressionUUID->"3ac4010c-7ec3-4252-870f-294f15f704f5"],

Cell[BoxData[
 RowBox[{
  RowBox[{"plotOpts", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"AspectRatio", "\[Rule]", "Full"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"0", ",", "Automatic"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "1"}], "}"}]}], "}"}]}], ",", 
     RowBox[{"ImageSize", "\[Rule]", "Medium"}]}], "}"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.820745478905736*^9, 3.8207455075788393`*^9}},
 CellLabel->"In[5]:=",ExpressionUUID->"203c00b1-dcd9-4ba2-bb8d-2fd6a1259152"],

Cell[CellGroupData[{

Cell["Constant Resistance Load", "Section",
 CellChangeTimes->{{3.8207448930434628`*^9, 
  3.820744895690857*^9}},ExpressionUUID->"050f3866-d4b4-4010-afe8-\
fddcc1041f22"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Manipulate", "[", 
   RowBox[{
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"loadEqns", ",", " ", "sol", ",", " ", "params"}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"loadEqns", " ", "=", " ", 
        RowBox[{"{", " ", 
         RowBox[{"iq", " ", "\[Equal]", " ", 
          RowBox[{"vq", "/", "Rload"}]}], "}"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"params", " ", "=", " ", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Rinv1", "\[Rule]", "$Rinv1"}], ",", 
          RowBox[{"Rinv2", "->", "$Rinv2"}], ",", " ", 
          RowBox[{"Rload", "->", "$Rload"}], ",", " ", 
          RowBox[{"vdc", "->", "$vdc"}], ",", " ", 
          RowBox[{"d", "->", "$d"}]}], "}"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"sol", " ", "=", " ", 
        RowBox[{"Simplify", "/@", 
         RowBox[{"First", "@", 
          RowBox[{"Solve", "[", 
           RowBox[{
            RowBox[{"Join", "[", 
             RowBox[{"invEqns", ",", " ", "loadEqns"}], "]"}], ",", " ", 
            RowBox[{"{", 
             RowBox[{"idc", ",", "vq", ",", "iq"}], "}"}]}], "]"}]}]}]}], ";",
        "\[IndentingNewLine]", 
       RowBox[{"Row", "[", 
        RowBox[{"{", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"Show", "[", 
           RowBox[{"{", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"ParametricPlot", "[", 
              RowBox[{
               RowBox[{
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"Pin", ",", "eta"}], "}"}], "/.", "sol"}], "/.", 
                "params"}], ",", 
               RowBox[{"{", 
                RowBox[{"$d", ",", "0.1", ",", "2"}], "}"}], ",", " ", 
               RowBox[{"AspectRatio", "\[Rule]", "Full"}], ",", 
               RowBox[{"PlotRange", "\[Rule]", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{"0", ",", "Automatic"}], "}"}], ",", 
                  RowBox[{"{", 
                   RowBox[{"0", ",", "1"}], "}"}]}], "}"}]}], ",", 
               RowBox[{"ImageSize", "\[Rule]", "Medium"}], ",", " ", 
               RowBox[{"AxesLabel", "\[Rule]", 
                RowBox[{"{", 
                 RowBox[{"\"\<Pout\>\"", ",", "\"\<\[Eta]\>\""}], "}"}]}], 
               ",", " ", 
               RowBox[{
               "PlotLabel", "\[Rule]", 
                "\"\<Efficiency vs. Ouptut Power\>\""}]}], "]"}], ",", 
             "\[IndentingNewLine]", 
             RowBox[{"Plot", "[", 
              RowBox[{"0.85", ",", 
               RowBox[{"{", 
                RowBox[{"x", ",", "0", ",", "1000"}], "}"}], ",", " ", 
               RowBox[{"PlotStyle", "\[Rule]", 
                RowBox[{"{", 
                 RowBox[{"Gray", ",", "Dashed"}], "}"}]}]}], "]"}]}], "}"}], 
           "]"}], ",", "\[IndentingNewLine]", 
          RowBox[{"Show", "[", 
           RowBox[{"{", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"ParametricPlot", "[", 
              RowBox[{
               RowBox[{
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"idc", ",", "eta"}], "}"}], "/.", "sol"}], "/.", 
                "params"}], ",", 
               RowBox[{"{", 
                RowBox[{"$d", ",", "0.1", ",", "2"}], "}"}], ",", " ", 
               RowBox[{"AspectRatio", "\[Rule]", "Full"}], ",", 
               RowBox[{"PlotRange", "\[Rule]", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{"0", ",", "Automatic"}], "}"}], ",", 
                  RowBox[{"{", 
                   RowBox[{"0", ",", "1"}], "}"}]}], "}"}]}], ",", 
               RowBox[{"ImageSize", "\[Rule]", "Medium"}], ",", " ", 
               RowBox[{"AxesLabel", "\[Rule]", 
                RowBox[{"{", 
                 RowBox[{
                 "\"\<\!\(\*SubscriptBox[\(i\), \(DC\)]\)\>\"", ",", 
                  "\"\<\[Eta]\>\""}], "}"}]}], ",", " ", 
               RowBox[{
               "PlotLabel", "\[Rule]", 
                "\"\<Efficiency vs. Input Current\>\""}]}], "]"}], ",", 
             "\[IndentingNewLine]", 
             RowBox[{"Plot", "[", 
              RowBox[{"0.85", ",", 
               RowBox[{"{", 
                RowBox[{"x", ",", "0", ",", "1000"}], "}"}], ",", " ", 
               RowBox[{"PlotStyle", "\[Rule]", 
                RowBox[{"{", 
                 RowBox[{"Gray", ",", "Dashed"}], "}"}]}]}], "]"}]}], "}"}], 
           "]"}]}], "\[IndentingNewLine]", "}"}], "]"}]}]}], "]"}], ",", 
    "\[IndentingNewLine]", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"$Rinv1", ",", "0.2"}], "}"}], ",", "0", ",", "1"}], "}"}], 
    ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"$Rinv2", ",", "1.5"}], "}"}], ",", "0", ",", "3"}], "}"}], 
    ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"$Rload", ",", "5.5"}], "}"}], ",", "0.01", ",", "10", ",", 
      "6"}], "}"}], ",", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"$vdc", ",", "12"}], "}"}], ",", "1", ",", "24", ",", "12"}], 
     "}"}]}], "]"}], "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.8207450141238995`*^9, 3.8207450460741825`*^9}, 
   3.8207450948790255`*^9, {3.8207451463889227`*^9, 3.8207451676669407`*^9}, {
   3.820745259588552*^9, 3.8207452613007617`*^9}, {3.8207453404377403`*^9, 
   3.8207453640364504`*^9}, {3.820745537708392*^9, 3.8207455729113865`*^9}, 
   3.8207456332195024`*^9, {3.820745747351412*^9, 3.8207457545778527`*^9}, {
   3.820745786251164*^9, 3.8207458049399257`*^9}, {3.82074595843652*^9, 
   3.820745969073041*^9}, {3.8207460009718356`*^9, 3.82074600628681*^9}, {
   3.8207460436352158`*^9, 3.8207461801796465`*^9}, {3.820773004075101*^9, 
   3.8207730842815857`*^9}},
 CellLabel->"In[6]:=",ExpressionUUID->"43efb6d8-bc7e-4e39-98c8-f576511db76e"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`$Rinv1$$ = 0.2, $CellContext`$Rinv2$$ = 
    1.5, $CellContext`$Rload$$ = 5.5, $CellContext`$vdc$$ = 12, 
    Typeset`show$$ = True, Typeset`bookmarkList$$ = {}, 
    Typeset`bookmarkMode$$ = "Menu", Typeset`animator$$, Typeset`animvar$$ = 
    1, Typeset`name$$ = "\"untitled\"", Typeset`specs$$ = {{{
       Hold[$CellContext`$Rinv1$$], 0.2}, 0, 1}, {{
       Hold[$CellContext`$Rinv2$$], 1.5}, 0, 3}, {{
       Hold[$CellContext`$Rload$$], 5.5}, 0.01, 10, 6}, {{
       Hold[$CellContext`$vdc$$], 12}, 1, 24, 12}}, Typeset`size$$ = {
    720., {213., 219.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = True}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, 
      "Variables" :> {$CellContext`$Rinv1$$ = 0.2, $CellContext`$Rinv2$$ = 
        1.5, $CellContext`$Rload$$ = 5.5, $CellContext`$vdc$$ = 12}, 
      "ControllerVariables" :> {}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> 
      Module[{$CellContext`loadEqns$, $CellContext`sol$, \
$CellContext`params$}, $CellContext`loadEqns$ = {$CellContext`iq == \
$CellContext`vq/$CellContext`Rload}; $CellContext`params$ = \
{$CellContext`Rinv1 -> $CellContext`$Rinv1$$, $CellContext`Rinv2 -> \
$CellContext`$Rinv2$$, $CellContext`Rload -> $CellContext`$Rload$$, \
$CellContext`vdc -> $CellContext`$vdc$$, $CellContext`d -> $CellContext`$d}; \
$CellContext`sol$ = Map[Simplify, 
           First[
            Solve[
             
             Join[$CellContext`invEqns, $CellContext`loadEqns$], \
{$CellContext`idc, $CellContext`vq, $CellContext`iq}]]]; Row[{
           Show[{
             ParametricPlot[
              ReplaceAll[
               
               ReplaceAll[{$CellContext`Pin, $CellContext`eta}, \
$CellContext`sol$], $CellContext`params$], {$CellContext`$d, 0.1, 2}, 
              AspectRatio -> Full, PlotRange -> {{0, Automatic}, {0, 1}}, 
              ImageSize -> Medium, AxesLabel -> {"Pout", "\[Eta]"}, PlotLabel -> 
              "Efficiency vs. Ouptut Power"], 
             Plot[
             0.85, {$CellContext`x, 0, 1000}, PlotStyle -> {Gray, Dashed}]}], 
           Show[{
             ParametricPlot[
              ReplaceAll[
               
               ReplaceAll[{$CellContext`idc, $CellContext`eta}, \
$CellContext`sol$], $CellContext`params$], {$CellContext`$d, 0.1, 2}, 
              AspectRatio -> Full, PlotRange -> {{0, Automatic}, {0, 1}}, 
              ImageSize -> Medium, 
              AxesLabel -> {"\!\(\*SubscriptBox[\(i\), \(DC\)]\)", "\[Eta]"}, 
              PlotLabel -> "Efficiency vs. Input Current"], 
             Plot[
             0.85, {$CellContext`x, 0, 1000}, 
              PlotStyle -> {Gray, Dashed}]}]}]], 
      "Specifications" :> {{{$CellContext`$Rinv1$$, 0.2}, 0, 
         1}, {{$CellContext`$Rinv2$$, 1.5}, 0, 
         3}, {{$CellContext`$Rload$$, 5.5}, 0.01, 10, 
         6}, {{$CellContext`$vdc$$, 12}, 1, 24, 12}}, "Options" :> {}, 
      "DefaultOptions" :> {}],
     ImageSizeCache->{768., {289., 295.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{3.820826799711583*^9, 3.8212842441632614`*^9},
 CellLabel->"Out[6]=",ExpressionUUID->"c60b214a-1751-4eeb-80be-a9d7377952d9"],

Cell[BoxData[
 TemplateBox[{
  "Solve", "naqs", 
   "\"\\!\\(\\*RowBox[{\\\"Join\\\", \\\"[\\\", RowBox[{\\\"invEqns\\\", \
\\\",\\\", RowBox[{\\\"{\\\", RowBox[{\\\"iq\\\", \\\"\[Equal]\\\", \
FractionBox[\\\"vq\\\", \\\"Rload\\\"]}], \\\"}\\\"}]}], \\\"]\\\"}]\\) is \
not a quantified system of equations and inequalities.\"", 2, 1, 1, 
   19975104959833606794, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.8213161282625475`*^9},
 CellLabel->"",ExpressionUUID->"1c171b01-d941-4f7b-9847-fa83d0b9b26a"],

Cell[BoxData[
 TemplateBox[{
  "ReplaceAll", "reps", 
   "\"\\!\\(\\*RowBox[{\\\"{\\\", RowBox[{\\\"Join\\\", \\\"[\\\", RowBox[{\\\
\"invEqns\\\", \\\",\\\", RowBox[{\\\"{\\\", RowBox[{\\\"iq\\\", \\\"\[Equal]\
\\\", FractionBox[\\\"vq\\\", \\\"Rload\\\"]}], \\\"}\\\"}]}], \\\"]\\\"}], \
\\\"}\\\"}]\\) is neither a list of replacement rules nor a valid dispatch \
table, and so cannot be used for replacing.\"", 2, 1, 2, 19975104959833606794,
    "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.821316128512397*^9},
 CellLabel->"",ExpressionUUID->"9c83705f-4b1f-4e3a-b28f-5fdfa5dc8dd4"],

Cell[BoxData[
 TemplateBox[{
  "ReplaceAll", "reps", 
   "\"\\!\\(\\*RowBox[{\\\"{\\\", RowBox[{\\\"Join\\\", \\\"[\\\", RowBox[{\\\
\"invEqns\\\", \\\",\\\", RowBox[{\\\"{\\\", RowBox[{\\\"iq\\\", \\\"\[Equal]\
\\\", RowBox[{\\\"0.18181818181818182`\\\", \\\" \\\", \\\"vq\\\"}]}], \
\\\"}\\\"}]}], \\\"]\\\"}], \\\"}\\\"}]\\) is neither a list of replacement \
rules nor a valid dispatch table, and so cannot be used for replacing.\"", 2, 
   1, 3, 19975104959833606794, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.8213161285782213`*^9},
 CellLabel->"",ExpressionUUID->"abe0a3c4-fd99-4089-8937-e20241147b89"],

Cell[BoxData[
 TemplateBox[{
  "ReplaceAll", "reps", 
   "\"\\!\\(\\*RowBox[{\\\"{\\\", RowBox[{\\\"Join\\\", \\\"[\\\", RowBox[{\\\
\"invEqns\\\", \\\",\\\", RowBox[{\\\"{\\\", RowBox[{\\\"iq\\\", \\\"\[Equal]\
\\\", RowBox[{\\\"0.18181818181818182`\\\", \\\" \\\", \\\"vq\\\"}]}], \
\\\"}\\\"}]}], \\\"]\\\"}], \\\"}\\\"}]\\) is neither a list of replacement \
rules nor a valid dispatch table, and so cannot be used for replacing.\"", 2, 
   1, 4, 19975104959833606794, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.8213161285881944`*^9},
 CellLabel->"",ExpressionUUID->"2db32172-b69b-4aa5-80fe-2959970163b1"],

Cell[BoxData[
 TemplateBox[{
  "General", "stop", 
   "\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"ReplaceAll\\\", \
\\\"::\\\", \\\"reps\\\"}], \\\"MessageName\\\"]\\) will be suppressed during \
this calculation.\"", 2, 1, 5, 19975104959833606794, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.821316128596211*^9},
 CellLabel->"",ExpressionUUID->"0409c931-f606-4e80-9016-ccf8c9574e19"],

Cell[BoxData[
 TemplateBox[{
  "Solve", "naqs", 
   "\"\\!\\(\\*RowBox[{\\\"Join\\\", \\\"[\\\", RowBox[{\\\"invEqns\\\", \
\\\",\\\", RowBox[{\\\"{\\\", RowBox[{\\\"iq\\\", \\\"\[Equal]\\\", \
FractionBox[\\\"vq\\\", \\\"Rload\\\"]}], \\\"}\\\"}]}], \\\"]\\\"}]\\) is \
not a quantified system of equations and inequalities.\"", 2, 1, 16, 
   19975104959833606794, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.821316130273481*^9},
 CellLabel->"",ExpressionUUID->"f2d60ac4-971f-4315-87cb-6e193ad78342"],

Cell[BoxData[
 TemplateBox[{
  "ReplaceAll", "reps", 
   "\"\\!\\(\\*RowBox[{\\\"{\\\", RowBox[{\\\"Join\\\", \\\"[\\\", RowBox[{\\\
\"invEqns\\\", \\\",\\\", RowBox[{\\\"{\\\", RowBox[{\\\"iq\\\", \\\"\[Equal]\
\\\", FractionBox[\\\"vq\\\", \\\"Rload\\\"]}], \\\"}\\\"}]}], \\\"]\\\"}], \
\\\"}\\\"}]\\) is neither a list of replacement rules nor a valid dispatch \
table, and so cannot be used for replacing.\"", 2, 1, 17, 
   19975104959833606794, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.821316130405364*^9},
 CellLabel->"",ExpressionUUID->"1cd9bd43-830a-4f34-985c-865c5cd608f7"],

Cell[BoxData[
 TemplateBox[{
  "ReplaceAll", "reps", 
   "\"\\!\\(\\*RowBox[{\\\"{\\\", RowBox[{\\\"Join\\\", \\\"[\\\", RowBox[{\\\
\"invEqns\\\", \\\",\\\", RowBox[{\\\"{\\\", RowBox[{\\\"iq\\\", \\\"\[Equal]\
\\\", RowBox[{\\\"0.18181818181818182`\\\", \\\" \\\", \\\"vq\\\"}]}], \
\\\"}\\\"}]}], \\\"]\\\"}], \\\"}\\\"}]\\) is neither a list of replacement \
rules nor a valid dispatch table, and so cannot be used for replacing.\"", 2, 
   1, 18, 19975104959833606794, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.821316130419347*^9},
 CellLabel->"",ExpressionUUID->"58a2a1eb-8dd4-498f-97a4-912c06ec1159"],

Cell[BoxData[
 TemplateBox[{
  "ReplaceAll", "reps", 
   "\"\\!\\(\\*RowBox[{\\\"{\\\", RowBox[{\\\"Join\\\", \\\"[\\\", RowBox[{\\\
\"invEqns\\\", \\\",\\\", RowBox[{\\\"{\\\", RowBox[{\\\"iq\\\", \\\"\[Equal]\
\\\", RowBox[{\\\"0.18181818181818182`\\\", \\\" \\\", \\\"vq\\\"}]}], \
\\\"}\\\"}]}], \\\"]\\\"}], \\\"}\\\"}]\\) is neither a list of replacement \
rules nor a valid dispatch table, and so cannot be used for replacing.\"", 2, 
   1, 19, 19975104959833606794, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.8213161304702168`*^9},
 CellLabel->"",ExpressionUUID->"f879fe2c-c1d4-427d-a690-e5f69757f548"],

Cell[BoxData[
 TemplateBox[{
  "General", "stop", 
   "\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"ReplaceAll\\\", \
\\\"::\\\", \\\"reps\\\"}], \\\"MessageName\\\"]\\) will be suppressed during \
this calculation.\"", 2, 1, 20, 19975104959833606794, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.821316130489813*^9},
 CellLabel->"",ExpressionUUID->"f6cc22ef-6d5b-467c-8dd3-e05fc5bd4df1"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`$Rinv1$$ = 0.2, $CellContext`$Rinv2$$ = 
    1.5, $CellContext`$Rload$$ = 5.5, $CellContext`$vdc$$ = 12, 
    Typeset`show$$ = True, Typeset`bookmarkList$$ = {}, 
    Typeset`bookmarkMode$$ = "Menu", Typeset`animator$$, Typeset`animvar$$ = 
    1, Typeset`name$$ = "\"untitled\"", Typeset`specs$$ = {{{
       Hold[$CellContext`$Rinv1$$], 0.2}, 0, 1}, {{
       Hold[$CellContext`$Rinv2$$], 1.5}, 0, 3}, {{
       Hold[$CellContext`$Rload$$], 5.5}, 0.01, 10, 6}, {{
       Hold[$CellContext`$vdc$$], 12}, 1, 24, 12}}, Typeset`size$$ = {
    720., {213., 219.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = True}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, 
      "Variables" :> {$CellContext`$Rinv1$$ = 0.2, $CellContext`$Rinv2$$ = 
        1.5, $CellContext`$Rload$$ = 5.5, $CellContext`$vdc$$ = 12}, 
      "ControllerVariables" :> {}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> 
      Module[{$CellContext`loadEqns$, $CellContext`sol$, \
$CellContext`params$}, $CellContext`loadEqns$ = {$CellContext`iq == \
$CellContext`vq/$CellContext`Rload}; $CellContext`params$ = \
{$CellContext`Rinv1 -> $CellContext`$Rinv1$$, $CellContext`Rinv2 -> \
$CellContext`$Rinv2$$, $CellContext`Rload -> $CellContext`$Rload$$, \
$CellContext`vdc -> $CellContext`$vdc$$, $CellContext`d -> $CellContext`$d}; \
$CellContext`sol$ = Map[Simplify, 
           First[
            Solve[
             
             Join[$CellContext`invEqns, $CellContext`loadEqns$], \
{$CellContext`idc, $CellContext`vq, $CellContext`iq}]]]; Row[{
           Show[{
             ParametricPlot[
              ReplaceAll[
               
               ReplaceAll[{$CellContext`Pin, $CellContext`eta}, \
$CellContext`sol$], $CellContext`params$], {$CellContext`$d, 0.1, 2}, 
              AspectRatio -> Full, PlotRange -> {{0, Automatic}, {0, 1}}, 
              ImageSize -> Medium, AxesLabel -> {"Pout", "\[Eta]"}, PlotLabel -> 
              "Efficiency vs. Ouptut Power"], 
             Plot[
             0.85, {$CellContext`x, 0, 1000}, PlotStyle -> {Gray, Dashed}]}], 
           Show[{
             ParametricPlot[
              ReplaceAll[
               
               ReplaceAll[{$CellContext`idc, $CellContext`eta}, \
$CellContext`sol$], $CellContext`params$], {$CellContext`$d, 0.1, 2}, 
              AspectRatio -> Full, PlotRange -> {{0, Automatic}, {0, 1}}, 
              ImageSize -> Medium, 
              AxesLabel -> {"\!\(\*SubscriptBox[\(i\), \(DC\)]\)", "\[Eta]"}, 
              PlotLabel -> "Efficiency vs. Input Current"], 
             Plot[
             0.85, {$CellContext`x, 0, 1000}, 
              PlotStyle -> {Gray, Dashed}]}]}]], 
      "Specifications" :> {{{$CellContext`$Rinv1$$, 0.2}, 0, 
         1}, {{$CellContext`$Rinv2$$, 1.5}, 0, 
         3}, {{$CellContext`$Rload$$, 5.5}, 0.01, 10, 
         6}, {{$CellContext`$vdc$$, 12}, 1, 24, 12}}, "Options" :> {}, 
      "DefaultOptions" :> {}],
     ImageSizeCache->{768., {289., 295.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Input",
 CellChangeTimes->{3.8207739234965577`*^9},
 CellLabel->"In[7]:=",ExpressionUUID->"2db21af2-34c3-4afc-9d11-79df59c25c60"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`$Rinv1$$ = 0.2, $CellContext`$Rinv2$$ = 
    1.5, $CellContext`$Rload$$ = 5.5, $CellContext`$vdc$$ = 12, 
    Typeset`show$$ = True, Typeset`bookmarkList$$ = {}, 
    Typeset`bookmarkMode$$ = "Menu", Typeset`animator$$, Typeset`animvar$$ = 
    1, Typeset`name$$ = "\"untitled\"", Typeset`specs$$ = {{{
       Hold[$CellContext`$Rinv1$$], 0.2}, 0, 1}, {{
       Hold[$CellContext`$Rinv2$$], 1.5}, 0, 3}, {{
       Hold[$CellContext`$Rload$$], 5.5}, 0.01, 10, 6}, {{
       Hold[$CellContext`$vdc$$], 12}, 1, 24, 12}}, Typeset`size$$ = {
    720., {213., 219.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = True}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, 
      "Variables" :> {$CellContext`$Rinv1$$ = 0.2, $CellContext`$Rinv2$$ = 
        1.5, $CellContext`$Rload$$ = 5.5, $CellContext`$vdc$$ = 12}, 
      "ControllerVariables" :> {}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> 
      Module[{$CellContext`loadEqns$, $CellContext`sol$, \
$CellContext`params$}, $CellContext`loadEqns$ = {$CellContext`iq == \
$CellContext`vq/$CellContext`Rload}; $CellContext`params$ = \
{$CellContext`Rinv1 -> $CellContext`$Rinv1$$, $CellContext`Rinv2 -> \
$CellContext`$Rinv2$$, $CellContext`Rload -> $CellContext`$Rload$$, \
$CellContext`vdc -> $CellContext`$vdc$$, $CellContext`d -> $CellContext`$d}; \
$CellContext`sol$ = Map[Simplify, 
           First[
            Solve[
             
             Join[$CellContext`invEqns, $CellContext`loadEqns$], \
{$CellContext`idc, $CellContext`vq, $CellContext`iq}]]]; Row[{
           Show[{
             ParametricPlot[
              ReplaceAll[
               
               ReplaceAll[{$CellContext`Pin, $CellContext`eta}, \
$CellContext`sol$], $CellContext`params$], {$CellContext`$d, 0.1, 2}, 
              AspectRatio -> Full, PlotRange -> {{0, Automatic}, {0, 1}}, 
              ImageSize -> Medium, AxesLabel -> {"Pout", "\[Eta]"}, PlotLabel -> 
              "Efficiency vs. Ouptut Power"], 
             Plot[
             0.85, {$CellContext`x, 0, 1000}, PlotStyle -> {Gray, Dashed}]}], 
           Show[{
             ParametricPlot[
              ReplaceAll[
               
               ReplaceAll[{$CellContext`idc, $CellContext`eta}, \
$CellContext`sol$], $CellContext`params$], {$CellContext`$d, 0.1, 2}, 
              AspectRatio -> Full, PlotRange -> {{0, Automatic}, {0, 1}}, 
              ImageSize -> Medium, 
              AxesLabel -> {"\!\(\*SubscriptBox[\(i\), \(DC\)]\)", "\[Eta]"}, 
              PlotLabel -> "Efficiency vs. Input Current"], 
             Plot[
             0.85, {$CellContext`x, 0, 1000}, 
              PlotStyle -> {Gray, Dashed}]}]}]], 
      "Specifications" :> {{{$CellContext`$Rinv1$$, 0.2}, 0, 
         1}, {{$CellContext`$Rinv2$$, 1.5}, 0, 
         3}, {{$CellContext`$Rload$$, 5.5}, 0.01, 10, 
         6}, {{$CellContext`$vdc$$, 12}, 1, 24, 12}}, "Options" :> {}, 
      "DefaultOptions" :> {}],
     ImageSizeCache->{768., {289., 295.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{3.8208268000877953`*^9, 3.8212842445113306`*^9},
 CellLabel->"Out[7]=",ExpressionUUID->"6a0dbd0e-f99f-496a-a548-77490ce6eb73"],

Cell[BoxData[
 TemplateBox[{
  "Solve", "naqs", 
   "\"\\!\\(\\*RowBox[{\\\"Join\\\", \\\"[\\\", RowBox[{\\\"invEqns\\\", \
\\\",\\\", RowBox[{\\\"{\\\", RowBox[{\\\"iq\\\", \\\"\[Equal]\\\", \
FractionBox[\\\"vq\\\", \\\"Rload\\\"]}], \\\"}\\\"}]}], \\\"]\\\"}]\\) is \
not a quantified system of equations and inequalities.\"", 2, 1, 6, 
   19975104959833606794, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.8213161289932747`*^9},
 CellLabel->"",ExpressionUUID->"134983f3-0a2e-4186-8571-00bfcbc0062f"],

Cell[BoxData[
 TemplateBox[{
  "ReplaceAll", "reps", 
   "\"\\!\\(\\*RowBox[{\\\"{\\\", RowBox[{\\\"Join\\\", \\\"[\\\", RowBox[{\\\
\"invEqns\\\", \\\",\\\", RowBox[{\\\"{\\\", RowBox[{\\\"iq\\\", \\\"\[Equal]\
\\\", FractionBox[\\\"vq\\\", \\\"Rload\\\"]}], \\\"}\\\"}]}], \\\"]\\\"}], \
\\\"}\\\"}]\\) is neither a list of replacement rules nor a valid dispatch \
table, and so cannot be used for replacing.\"", 2, 1, 7, 19975104959833606794,
    "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.8213161291920137`*^9},
 CellLabel->"",ExpressionUUID->"c003a742-9562-4ab3-902d-4d257b91a101"],

Cell[BoxData[
 TemplateBox[{
  "ReplaceAll", "reps", 
   "\"\\!\\(\\*RowBox[{\\\"{\\\", RowBox[{\\\"Join\\\", \\\"[\\\", RowBox[{\\\
\"invEqns\\\", \\\",\\\", RowBox[{\\\"{\\\", RowBox[{\\\"iq\\\", \\\"\[Equal]\
\\\", RowBox[{\\\"0.18181818181818182`\\\", \\\" \\\", \\\"vq\\\"}]}], \
\\\"}\\\"}]}], \\\"]\\\"}], \\\"}\\\"}]\\) is neither a list of replacement \
rules nor a valid dispatch table, and so cannot be used for replacing.\"", 2, 
   1, 8, 19975104959833606794, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.821316129234923*^9},
 CellLabel->"",ExpressionUUID->"3cfa7874-29b9-49eb-bc26-f8785af635d7"],

Cell[BoxData[
 TemplateBox[{
  "ReplaceAll", "reps", 
   "\"\\!\\(\\*RowBox[{\\\"{\\\", RowBox[{\\\"Join\\\", \\\"[\\\", RowBox[{\\\
\"invEqns\\\", \\\",\\\", RowBox[{\\\"{\\\", RowBox[{\\\"iq\\\", \\\"\[Equal]\
\\\", RowBox[{\\\"0.18181818181818182`\\\", \\\" \\\", \\\"vq\\\"}]}], \
\\\"}\\\"}]}], \\\"]\\\"}], \\\"}\\\"}]\\) is neither a list of replacement \
rules nor a valid dispatch table, and so cannot be used for replacing.\"", 2, 
   1, 9, 19975104959833606794, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.821316129255945*^9},
 CellLabel->"",ExpressionUUID->"72f2f91a-a4ad-487f-8538-6f5e2ee8fc59"],

Cell[BoxData[
 TemplateBox[{
  "General", "stop", 
   "\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"ReplaceAll\\\", \
\\\"::\\\", \\\"reps\\\"}], \\\"MessageName\\\"]\\) will be suppressed during \
this calculation.\"", 2, 1, 10, 19975104959833606794, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.821316129298285*^9},
 CellLabel->"",ExpressionUUID->"7576bfca-ec3d-4f10-a8fc-9a8ac0d85297"],

Cell[BoxData[
 TemplateBox[{
  "Solve", "naqs", 
   "\"\\!\\(\\*RowBox[{\\\"Join\\\", \\\"[\\\", RowBox[{\\\"invEqns\\\", \
\\\",\\\", RowBox[{\\\"{\\\", RowBox[{\\\"iq\\\", \\\"\[Equal]\\\", \
FractionBox[\\\"vq\\\", \\\"Rload\\\"]}], \\\"}\\\"}]}], \\\"]\\\"}]\\) is \
not a quantified system of equations and inequalities.\"", 2, 1, 11, 
   19975104959833606794, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.8213161296292825`*^9},
 CellLabel->"",ExpressionUUID->"f9d16311-3d17-48ad-a491-a3d850d4fd14"],

Cell[BoxData[
 TemplateBox[{
  "ReplaceAll", "reps", 
   "\"\\!\\(\\*RowBox[{\\\"{\\\", RowBox[{\\\"Join\\\", \\\"[\\\", RowBox[{\\\
\"invEqns\\\", \\\",\\\", RowBox[{\\\"{\\\", RowBox[{\\\"iq\\\", \\\"\[Equal]\
\\\", FractionBox[\\\"vq\\\", \\\"Rload\\\"]}], \\\"}\\\"}]}], \\\"]\\\"}], \
\\\"}\\\"}]\\) is neither a list of replacement rules nor a valid dispatch \
table, and so cannot be used for replacing.\"", 2, 1, 12, 
   19975104959833606794, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.821316129827919*^9},
 CellLabel->"",ExpressionUUID->"533e960c-bd2a-4ae0-b472-bba4d8a86498"],

Cell[BoxData[
 TemplateBox[{
  "ReplaceAll", "reps", 
   "\"\\!\\(\\*RowBox[{\\\"{\\\", RowBox[{\\\"Join\\\", \\\"[\\\", RowBox[{\\\
\"invEqns\\\", \\\",\\\", RowBox[{\\\"{\\\", RowBox[{\\\"iq\\\", \\\"\[Equal]\
\\\", RowBox[{\\\"0.18181818181818182`\\\", \\\" \\\", \\\"vq\\\"}]}], \
\\\"}\\\"}]}], \\\"]\\\"}], \\\"}\\\"}]\\) is neither a list of replacement \
rules nor a valid dispatch table, and so cannot be used for replacing.\"", 2, 
   1, 13, 19975104959833606794, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.8213161298406615`*^9},
 CellLabel->"",ExpressionUUID->"10aa8375-3ead-4ad7-b524-f4000ae42a1f"],

Cell[BoxData[
 TemplateBox[{
  "ReplaceAll", "reps", 
   "\"\\!\\(\\*RowBox[{\\\"{\\\", RowBox[{\\\"Join\\\", \\\"[\\\", RowBox[{\\\
\"invEqns\\\", \\\",\\\", RowBox[{\\\"{\\\", RowBox[{\\\"iq\\\", \\\"\[Equal]\
\\\", RowBox[{\\\"0.18181818181818182`\\\", \\\" \\\", \\\"vq\\\"}]}], \
\\\"}\\\"}]}], \\\"]\\\"}], \\\"}\\\"}]\\) is neither a list of replacement \
rules nor a valid dispatch table, and so cannot be used for replacing.\"", 2, 
   1, 14, 19975104959833606794, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.82131612986305*^9},
 CellLabel->"",ExpressionUUID->"f3e62813-c442-45dd-9547-2b9f0caf6794"],

Cell[BoxData[
 TemplateBox[{
  "General", "stop", 
   "\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"ReplaceAll\\\", \
\\\"::\\\", \\\"reps\\\"}], \\\"MessageName\\\"]\\) will be suppressed during \
this calculation.\"", 2, 1, 15, 19975104959833606794, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.821316129895134*^9},
 CellLabel->"",ExpressionUUID->"8ccf11ae-2c8a-4e6f-afbb-00ff46c272d6"]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{3.8207450277870054`*^9},
 CellLabel->"In[8]:=",ExpressionUUID->"52846653-b1a4-434a-a5e9-2b7a0bcdf530"],

Cell["Looks good", "Text",
 CellChangeTimes->{{3.820744758402816*^9, 
  3.8207447600262814`*^9}},ExpressionUUID->"9611e324-8337-4fd7-8377-\
eb9e847ece7c"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Constant Current Load", "Section",
 CellChangeTimes->{{3.8207448930434628`*^9, 3.820744895690857*^9}, {
  3.8207449480455685`*^9, 
  3.82074495014294*^9}},ExpressionUUID->"74452b38-6c21-4268-b5fb-\
5dae98536890"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", 
  RowBox[{
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"sol", ",", " ", "params"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"params", " ", "=", " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Rinv1", "\[Rule]", "$Rinv1"}], ",", 
         RowBox[{"Rinv2", "->", "$Rinv2"}], ",", " ", 
         RowBox[{"iq", "\[Rule]", "$iq"}], ",", " ", 
         RowBox[{"vdc", "->", "$vdc"}], ",", " ", 
         RowBox[{"d", "->", "$d"}]}], "}"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"sol", " ", "=", " ", 
       RowBox[{"Simplify", "/@", 
        RowBox[{"First", "@", 
         RowBox[{"Solve", "[", 
          RowBox[{"invEqns", ",", " ", 
           RowBox[{"{", 
            RowBox[{"idc", ",", "vq"}], "}"}]}], "]"}]}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Row", "[", 
       RowBox[{"{", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"Show", "[", 
          RowBox[{"{", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"ParametricPlot", "[", 
             RowBox[{
              RowBox[{
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"Pin", ",", "eta"}], "}"}], "/.", "sol"}], "/.", 
               "params"}], ",", 
              RowBox[{"{", 
               RowBox[{"$d", ",", "0.1", ",", "2"}], "}"}], ",", " ", 
              RowBox[{"AspectRatio", "\[Rule]", "Full"}], ",", 
              RowBox[{"PlotRange", "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"0", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"0", ",", "1"}], "}"}]}], "}"}]}], ",", 
              RowBox[{"ImageSize", "\[Rule]", "Medium"}], ",", " ", 
              RowBox[{"AxesLabel", "\[Rule]", 
               RowBox[{"{", 
                RowBox[{"\"\<Pout\>\"", ",", "\"\<\[Eta]\>\""}], "}"}]}]}], 
             "]"}], ",", "\[IndentingNewLine]", 
            RowBox[{"Plot", "[", 
             RowBox[{"0.85", ",", 
              RowBox[{"{", 
               RowBox[{"x", ",", "0", ",", "1000"}], "}"}], ",", " ", 
              RowBox[{"PlotStyle", "\[Rule]", 
               RowBox[{"{", 
                RowBox[{"Gray", ",", "Dashed"}], "}"}]}]}], "]"}]}], "}"}], 
          "]"}], ",", "\[IndentingNewLine]", 
         RowBox[{"Show", "[", 
          RowBox[{"{", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"ParametricPlot", "[", 
             RowBox[{
              RowBox[{
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"idc", ",", "eta"}], "}"}], "/.", "sol"}], "/.", 
               "params"}], ",", 
              RowBox[{"{", 
               RowBox[{"$d", ",", "0.1", ",", "2"}], "}"}], ",", " ", 
              RowBox[{"AspectRatio", "\[Rule]", "Full"}], ",", 
              RowBox[{"PlotRange", "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"0", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"0", ",", "1"}], "}"}]}], "}"}]}], ",", 
              RowBox[{"ImageSize", "\[Rule]", "Medium"}], ",", " ", 
              RowBox[{"AxesLabel", "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                "\"\<\!\(\*SubscriptBox[\(i\), \(DC\)]\)\>\"", ",", 
                 "\"\<\[Eta]\>\""}], "}"}]}]}], "]"}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{"Plot", "[", 
             RowBox[{"0.85", ",", 
              RowBox[{"{", 
               RowBox[{"x", ",", "0", ",", "1000"}], "}"}], ",", " ", 
              RowBox[{"PlotStyle", "\[Rule]", 
               RowBox[{"{", 
                RowBox[{"Gray", ",", "Dashed"}], "}"}]}]}], "]"}]}], "}"}], 
          "]"}]}], "\[IndentingNewLine]", "}"}], "]"}]}]}], "]"}], ",", 
   "\[IndentingNewLine]", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"$Rinv1", ",", "0.2"}], "}"}], ",", "0", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"$Rinv2", ",", "1.5"}], "}"}], ",", "0", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"$iq", ",", "5.5"}], "}"}], ",", "0", ",", "10"}], "}"}], ",", 
   " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"$vdc", ",", "12"}], "}"}], ",", "1", ",", "24"}], "}"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.820692935833934*^9, 3.820693141349603*^9}, 
   3.820693259387432*^9, 3.820693323544361*^9, {3.820693360466709*^9, 
   3.8206934084279504`*^9}, {3.8206935166924095`*^9, 
   3.8206935774240627`*^9}, {3.820693999584469*^9, 3.8206941083656635`*^9}, {
   3.820694143105863*^9, 3.8206941718365355`*^9}, {3.8206942631568403`*^9, 
   3.8206942685294714`*^9}, {3.8206943172970476`*^9, 
   3.8206943199270144`*^9}, {3.820694359518132*^9, 3.82069437544055*^9}, {
   3.8206945066078634`*^9, 3.820694512469697*^9}, {3.820694626350706*^9, 
   3.8206946265042953`*^9}, {3.8206949602049513`*^9, 3.820694967099513*^9}, {
   3.8207433625059943`*^9, 3.8207434110405283`*^9}, {3.820743562627318*^9, 
   3.820743575884411*^9}, {3.820743727983224*^9, 3.8207437289376564`*^9}, 
   3.8207439740536366`*^9, {3.820744038679826*^9, 3.8207440490513725`*^9}, {
   3.820744175690563*^9, 3.8207441793569393`*^9}, {3.820744235085109*^9, 
   3.8207443067243853`*^9}, {3.8207444247658243`*^9, 3.820744450893874*^9}, {
   3.820744483453562*^9, 3.820744655332428*^9}, {3.820744928418069*^9, 
   3.820744929475733*^9}, {3.820744979079879*^9, 3.8207449971093664`*^9}, {
   3.8207461972865987`*^9, 3.820746265322863*^9}, {3.8207463081113224`*^9, 
   3.820746318375067*^9}},
 CellLabel->"In[9]:=",ExpressionUUID->"241598b2-bfc8-4503-9b7a-7ccba3067ecf"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`$iq$$ = 5.5, $CellContext`$Rinv1$$ = 
    0.2, $CellContext`$Rinv2$$ = 1.5, $CellContext`$vdc$$ = 12, 
    Typeset`show$$ = True, Typeset`bookmarkList$$ = {}, 
    Typeset`bookmarkMode$$ = "Menu", Typeset`animator$$, Typeset`animvar$$ = 
    1, Typeset`name$$ = "\"untitled\"", Typeset`specs$$ = {{{
       Hold[$CellContext`$Rinv1$$], 0.2}, 0, 1}, {{
       Hold[$CellContext`$Rinv2$$], 1.5}, 0, 3}, {{
       Hold[$CellContext`$iq$$], 5.5}, 0, 10}, {{
       Hold[$CellContext`$vdc$$], 12}, 1, 24}}, Typeset`size$$ = {
    720., {213., 219.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = True}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, 
      "Variables" :> {$CellContext`$iq$$ = 5.5, $CellContext`$Rinv1$$ = 
        0.2, $CellContext`$Rinv2$$ = 1.5, $CellContext`$vdc$$ = 12}, 
      "ControllerVariables" :> {}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> 
      Module[{$CellContext`sol$, $CellContext`params$}, $CellContext`params$ = \
{$CellContext`Rinv1 -> $CellContext`$Rinv1$$, $CellContext`Rinv2 -> \
$CellContext`$Rinv2$$, $CellContext`iq -> $CellContext`$iq$$, \
$CellContext`vdc -> $CellContext`$vdc$$, $CellContext`d -> $CellContext`$d}; \
$CellContext`sol$ = Map[Simplify, 
           First[
            
            Solve[$CellContext`invEqns, {$CellContext`idc, \
$CellContext`vq}]]]; Row[{
           Show[{
             ParametricPlot[
              ReplaceAll[
               
               ReplaceAll[{$CellContext`Pin, $CellContext`eta}, \
$CellContext`sol$], $CellContext`params$], {$CellContext`$d, 0.1, 2}, 
              AspectRatio -> Full, PlotRange -> {{0, Automatic}, {0, 1}}, 
              ImageSize -> Medium, AxesLabel -> {"Pout", "\[Eta]"}], 
             Plot[
             0.85, {$CellContext`x, 0, 1000}, PlotStyle -> {Gray, Dashed}]}], 
           Show[{
             ParametricPlot[
              ReplaceAll[
               
               ReplaceAll[{$CellContext`idc, $CellContext`eta}, \
$CellContext`sol$], $CellContext`params$], {$CellContext`$d, 0.1, 2}, 
              AspectRatio -> Full, PlotRange -> {{0, Automatic}, {0, 1}}, 
              ImageSize -> Medium, 
              AxesLabel -> {"\!\(\*SubscriptBox[\(i\), \(DC\)]\)", "\[Eta]"}], 
             Plot[
             0.85, {$CellContext`x, 0, 1000}, 
              PlotStyle -> {Gray, Dashed}]}]}]], 
      "Specifications" :> {{{$CellContext`$Rinv1$$, 0.2}, 0, 
         1}, {{$CellContext`$Rinv2$$, 1.5}, 0, 3}, {{$CellContext`$iq$$, 5.5},
          0, 10}, {{$CellContext`$vdc$$, 12}, 1, 24}}, "Options" :> {}, 
      "DefaultOptions" :> {}],
     ImageSizeCache->{768., {289., 295.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{{3.820692937179335*^9, 3.820692942351015*^9}, 
   3.820692998011158*^9, {3.8206930493855295`*^9, 3.820693165268634*^9}, {
   3.8206932390348625`*^9, 3.820693259986829*^9}, {3.82069339660557*^9, 
   3.8206934091360564`*^9}, 3.8206934781135836`*^9, {3.820693517539654*^9, 
   3.8206936048596897`*^9}, 3.820694109307146*^9, 3.820694172630413*^9, 
   3.820694269497882*^9, 3.8206943207348547`*^9, {3.82069436838442*^9, 
   3.820694375981103*^9}, {3.8206945140095787`*^9, 3.820694550512974*^9}, {
   3.82069462756845*^9, 3.8206946343543015`*^9}, 3.82069471076845*^9, {
   3.8206947508477907`*^9, 3.8206947542197723`*^9}, 3.8206949716962194`*^9, 
   3.8206950735721593`*^9, {3.8206951630413933`*^9, 3.82069519043165*^9}, 
   3.820710757242572*^9, 3.8207432436386566`*^9, {3.8207433839848547`*^9, 
   3.820743411860588*^9}, 3.820743576408549*^9, 3.8207437297434316`*^9, {
   3.820743836325926*^9, 3.8207438536137457`*^9}, {3.8207439752633653`*^9, 
   3.820743984160708*^9}, {3.8207440497340565`*^9, 3.820744054303861*^9}, {
   3.8207442810612183`*^9, 3.820744313059742*^9}, 3.8207444516478167`*^9, 
   3.8207445156516604`*^9, 3.8207446204810624`*^9, 3.8207446565343084`*^9, 
   3.82074493745761*^9, {3.8207462396184154`*^9, 3.820746266012858*^9}, {
   3.8207463048956633`*^9, 3.820746319103436*^9}, 3.8208268003996243`*^9, 
   3.8212842449312077`*^9},
 CellLabel->"Out[9]=",ExpressionUUID->"75ddf93d-5208-4529-803f-2d8a424d2b56"],

Cell[BoxData[
 TemplateBox[{
  "Solve", "naqs", 
   "\"\\!\\(\\*RowBox[{\\\"invEqns\\\"}]\\) is not a quantified system of \
equations and inequalities.\"", 2, 1, 21, 19975104959833606794, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.8213161305977197`*^9},
 CellLabel->"",ExpressionUUID->"14b23a4e-0fc7-4ff3-ab57-9f2bdb09a0b6"],

Cell[BoxData[
 TemplateBox[{
  "ReplaceAll", "reps", 
   "\"\\!\\(\\*RowBox[{\\\"{\\\", \\\"invEqns\\\", \\\"}\\\"}]\\) is neither \
a list of replacement rules nor a valid dispatch table, and so cannot be used \
for replacing.\"", 2, 1, 22, 19975104959833606794, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.821316130676634*^9},
 CellLabel->"",ExpressionUUID->"306a8aa9-d4c4-40b9-a344-33baa3ab2e71"],

Cell[BoxData[
 TemplateBox[{
  "ReplaceAll", "reps", 
   "\"\\!\\(\\*RowBox[{\\\"{\\\", \\\"invEqns\\\", \\\"}\\\"}]\\) is neither \
a list of replacement rules nor a valid dispatch table, and so cannot be used \
for replacing.\"", 2, 1, 23, 19975104959833606794, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.821316130769437*^9},
 CellLabel->"",ExpressionUUID->"9918ae5b-d4df-4417-89fb-a7b786331d6a"]
}, Open  ]],

Cell["I like it", "Text",
 CellChangeTimes->{{3.820744758402816*^9, 3.8207447600262814`*^9}, {
  3.82074640480577*^9, 
  3.8207464060491753`*^9}},ExpressionUUID->"4083e322-0aea-4f2f-bf79-\
03e79dcb20eb"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Constant Resistance Load - Modify Constant load with d", "Section",
 CellChangeTimes->{{3.8207448930434628`*^9, 3.820744895690857*^9}, {
  3.8208268406320944`*^9, 
  3.8208268495012074`*^9}},ExpressionUUID->"7057ce03-0de2-4514-b616-\
f848ac842335"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Manipulate", "[", 
   RowBox[{
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "invEqns", ",", " ", "loadEqns", ",", " ", "sol", ",", " ", "params"}],
        "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"invEqns", " ", "=", " ", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"vq", " ", "\[Equal]", " ", 
           RowBox[{
            RowBox[{"d", "*", 
             RowBox[{"Sqrt", "[", 
              RowBox[{"3", "/", "2"}], "]"}], "*", "vdc"}], "-", 
            RowBox[{"idc", "*", "Rinv1"}], "-", 
            RowBox[{
             RowBox[{"1", "/", "d"}], "*", "idc", "*", "Rinv2"}]}]}], ",", 
          " ", 
          RowBox[{"idc", " ", "\[Equal]", " ", 
           RowBox[{"d", "*", 
            RowBox[{"Sqrt", "[", 
             RowBox[{"3", "/", "2"}], "]"}], "*", "iq"}]}]}], "}"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"loadEqns", " ", "=", " ", 
        RowBox[{"{", " ", 
         RowBox[{"iq", " ", "\[Equal]", " ", 
          RowBox[{"vq", "/", "Rload"}]}], "}"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"params", " ", "=", " ", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Rinv1", "\[Rule]", "$Rinv1"}], ",", 
          RowBox[{"Rinv2", "->", "$Rinv2"}], ",", " ", 
          RowBox[{"Rload", "->", "$Rload"}], ",", " ", 
          RowBox[{"vdc", "->", "$vdc"}], ",", " ", 
          RowBox[{"d", "->", "$d"}]}], "}"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"sol", " ", "=", " ", 
        RowBox[{"Simplify", "/@", 
         RowBox[{"First", "@", 
          RowBox[{"Solve", "[", 
           RowBox[{
            RowBox[{"Join", "[", 
             RowBox[{"invEqns", ",", " ", "loadEqns"}], "]"}], ",", " ", 
            RowBox[{"{", 
             RowBox[{"idc", ",", "vq", ",", "iq"}], "}"}]}], "]"}]}]}]}], ";",
        "\[IndentingNewLine]", 
       RowBox[{"Row", "[", 
        RowBox[{"{", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"Show", "[", 
           RowBox[{"{", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"ParametricPlot", "[", 
              RowBox[{
               RowBox[{
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"Pin", ",", "eta"}], "}"}], "/.", "sol"}], "/.", 
                "params"}], ",", 
               RowBox[{"{", 
                RowBox[{"$d", ",", "0.1", ",", "2"}], "}"}], ",", " ", 
               RowBox[{"AspectRatio", "\[Rule]", "Full"}], ",", 
               RowBox[{"PlotRange", "\[Rule]", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{"0", ",", "Automatic"}], "}"}], ",", 
                  RowBox[{"{", 
                   RowBox[{"0", ",", "1"}], "}"}]}], "}"}]}], ",", 
               RowBox[{"ImageSize", "\[Rule]", "Medium"}], ",", " ", 
               RowBox[{"AxesLabel", "\[Rule]", 
                RowBox[{"{", 
                 RowBox[{"\"\<Pout\>\"", ",", "\"\<\[Eta]\>\""}], "}"}]}], 
               ",", " ", 
               RowBox[{
               "PlotLabel", "\[Rule]", 
                "\"\<Efficiency vs. Ouptut Power\>\""}]}], "]"}], ",", 
             "\[IndentingNewLine]", 
             RowBox[{"Plot", "[", 
              RowBox[{"0.85", ",", 
               RowBox[{"{", 
                RowBox[{"x", ",", "0", ",", "1000"}], "}"}], ",", " ", 
               RowBox[{"PlotStyle", "\[Rule]", 
                RowBox[{"{", 
                 RowBox[{"Gray", ",", "Dashed"}], "}"}]}]}], "]"}]}], "}"}], 
           "]"}], ",", "\[IndentingNewLine]", 
          RowBox[{"Show", "[", 
           RowBox[{"{", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"ParametricPlot", "[", 
              RowBox[{
               RowBox[{
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"idc", ",", "eta"}], "}"}], "/.", "sol"}], "/.", 
                "params"}], ",", 
               RowBox[{"{", 
                RowBox[{"$d", ",", "0.1", ",", "2"}], "}"}], ",", " ", 
               RowBox[{"AspectRatio", "\[Rule]", "Full"}], ",", 
               RowBox[{"PlotRange", "\[Rule]", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{"0", ",", "Automatic"}], "}"}], ",", 
                  RowBox[{"{", 
                   RowBox[{"0", ",", "1"}], "}"}]}], "}"}]}], ",", 
               RowBox[{"ImageSize", "\[Rule]", "Medium"}], ",", " ", 
               RowBox[{"AxesLabel", "\[Rule]", 
                RowBox[{"{", 
                 RowBox[{
                 "\"\<\!\(\*SubscriptBox[\(i\), \(DC\)]\)\>\"", ",", 
                  "\"\<\[Eta]\>\""}], "}"}]}], ",", " ", 
               RowBox[{
               "PlotLabel", "\[Rule]", 
                "\"\<Efficiency vs. Input Current\>\""}]}], "]"}], ",", 
             "\[IndentingNewLine]", 
             RowBox[{"Plot", "[", 
              RowBox[{"0.85", ",", 
               RowBox[{"{", 
                RowBox[{"x", ",", "0", ",", "1000"}], "}"}], ",", " ", 
               RowBox[{"PlotStyle", "\[Rule]", 
                RowBox[{"{", 
                 RowBox[{"Gray", ",", "Dashed"}], "}"}]}]}], "]"}]}], "}"}], 
           "]"}]}], "\[IndentingNewLine]", "}"}], "]"}]}]}], "]"}], ",", 
    "\[IndentingNewLine]", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"$Rinv1", ",", "0.2"}], "}"}], ",", "0", ",", "1"}], "}"}], 
    ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"$Rinv2", ",", "1.5"}], "}"}], ",", "0", ",", "3"}], "}"}], 
    ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"$Rload", ",", "5.5"}], "}"}], ",", "0.01", ",", "10"}], "}"}],
     ",", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"$vdc", ",", "12"}], "}"}], ",", "1", ",", "24"}], "}"}]}], 
   "]"}], "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.8207450141238995`*^9, 3.8207450460741825`*^9}, 
   3.8207450948790255`*^9, {3.8207451463889227`*^9, 3.8207451676669407`*^9}, {
   3.820745259588552*^9, 3.8207452613007617`*^9}, {3.8207453404377403`*^9, 
   3.8207453640364504`*^9}, {3.820745537708392*^9, 3.8207455729113865`*^9}, 
   3.8207456332195024`*^9, {3.820745747351412*^9, 3.8207457545778527`*^9}, {
   3.820745786251164*^9, 3.8207458049399257`*^9}, {3.82074595843652*^9, 
   3.820745969073041*^9}, {3.8207460009718356`*^9, 3.82074600628681*^9}, {
   3.8207460436352158`*^9, 3.8207461801796465`*^9}, {3.820773004075101*^9, 
   3.8207730842815857`*^9}, {3.820826855088025*^9, 3.820826874710574*^9}, {
   3.820826986223233*^9, 3.820826993929656*^9}, {3.821284316870454*^9, 
   3.8212843175257015`*^9}, {3.821284666026453*^9, 3.8212847193912926`*^9}, {
   3.8212847983207865`*^9, 3.8212847984434586`*^9}, {3.821284836566048*^9, 
   3.821284836775489*^9}, {3.821284928971517*^9, 3.821284953956762*^9}, {
   3.8212851673622513`*^9, 3.821285167592636*^9}, {3.821285338620122*^9, 
   3.821285339243456*^9}, {3.821285372122116*^9, 3.821285401180688*^9}, {
   3.821285644474253*^9, 3.8212856521048784`*^9}, {3.8212857122152457`*^9, 
   3.8212857931071734`*^9}, {3.8212858247137527`*^9, 3.821285825962926*^9}, {
   3.8212859313012404`*^9, 3.8212859321020994`*^9}, {3.821285967063139*^9, 
   3.8212859674211826`*^9}, {3.821286036966148*^9, 3.8212860394305587`*^9}, {
   3.8212860752820644`*^9, 3.8212861058733034`*^9}, {3.821286156480625*^9, 
   3.821286156677101*^9}, {3.8212862059139013`*^9, 3.8212862061422896`*^9}, {
   3.8212863391181564`*^9, 3.8212863404047165`*^9}, {3.821286563912941*^9, 
   3.821286609822508*^9}},
 CellLabel->"In[92]:=",ExpressionUUID->"fd062c0a-d29a-4558-87b5-906afd3790ae"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`$Rinv1$$ = 0., $CellContext`$Rinv2$$ = 
    0.8250000000000001, $CellContext`$Rload$$ = 5.5, $CellContext`$vdc$$ = 12,
     Typeset`show$$ = True, Typeset`bookmarkList$$ = {}, 
    Typeset`bookmarkMode$$ = "Menu", Typeset`animator$$, Typeset`animvar$$ = 
    1, Typeset`name$$ = "\"untitled\"", Typeset`specs$$ = {{{
       Hold[$CellContext`$Rinv1$$], 0.2}, 0, 1}, {{
       Hold[$CellContext`$Rinv2$$], 1.5}, 0, 3}, {{
       Hold[$CellContext`$Rload$$], 5.5}, 0.01, 10}, {{
       Hold[$CellContext`$vdc$$], 12}, 1, 24}}, Typeset`size$$ = {
    720., {213., 219.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = True}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, 
      "Variables" :> {$CellContext`$Rinv1$$ = 0.2, $CellContext`$Rinv2$$ = 
        1.5, $CellContext`$Rload$$ = 5.5, $CellContext`$vdc$$ = 12}, 
      "ControllerVariables" :> {}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> 
      Module[{$CellContext`invEqns$, $CellContext`loadEqns$, \
$CellContext`sol$, $CellContext`params$}, $CellContext`invEqns$ = \
{$CellContext`vq == ($CellContext`d 
              Sqrt[3/2]) $CellContext`vdc - $CellContext`idc \
$CellContext`Rinv1 - ((
              1/$CellContext`d) $CellContext`idc) $CellContext`Rinv2, \
$CellContext`idc == ($CellContext`d 
             Sqrt[3/2]) $CellContext`iq}; $CellContext`loadEqns$ = \
{$CellContext`iq == $CellContext`vq/$CellContext`Rload}; $CellContext`params$ = \
{$CellContext`Rinv1 -> $CellContext`$Rinv1$$, $CellContext`Rinv2 -> \
$CellContext`$Rinv2$$, $CellContext`Rload -> $CellContext`$Rload$$, \
$CellContext`vdc -> $CellContext`$vdc$$, $CellContext`d -> $CellContext`$d}; \
$CellContext`sol$ = Map[Simplify, 
           First[
            Solve[
             
             Join[$CellContext`invEqns$, $CellContext`loadEqns$], \
{$CellContext`idc, $CellContext`vq, $CellContext`iq}]]]; Row[{
           Show[{
             ParametricPlot[
              ReplaceAll[
               
               ReplaceAll[{$CellContext`Pin, $CellContext`eta}, \
$CellContext`sol$], $CellContext`params$], {$CellContext`$d, 0.1, 2}, 
              AspectRatio -> Full, PlotRange -> {{0, Automatic}, {0, 1}}, 
              ImageSize -> Medium, AxesLabel -> {"Pout", "\[Eta]"}, PlotLabel -> 
              "Efficiency vs. Ouptut Power"], 
             Plot[
             0.85, {$CellContext`x, 0, 1000}, PlotStyle -> {Gray, Dashed}]}], 
           Show[{
             ParametricPlot[
              ReplaceAll[
               
               ReplaceAll[{$CellContext`idc, $CellContext`eta}, \
$CellContext`sol$], $CellContext`params$], {$CellContext`$d, 0.1, 2}, 
              AspectRatio -> Full, PlotRange -> {{0, Automatic}, {0, 1}}, 
              ImageSize -> Medium, 
              AxesLabel -> {"\!\(\*SubscriptBox[\(i\), \(DC\)]\)", "\[Eta]"}, 
              PlotLabel -> "Efficiency vs. Input Current"], 
             Plot[
             0.85, {$CellContext`x, 0, 1000}, 
              PlotStyle -> {Gray, Dashed}]}]}]], 
      "Specifications" :> {{{$CellContext`$Rinv1$$, 0.2}, 0, 
         1}, {{$CellContext`$Rinv2$$, 1.5}, 0, 
         3}, {{$CellContext`$Rload$$, 5.5}, 0.01, 
         10}, {{$CellContext`$vdc$$, 12}, 1, 24}}, "Options" :> {}, 
      "DefaultOptions" :> {}],
     ImageSizeCache->{768., {289., 295.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{
  3.820826799711583*^9, 3.8208268755897956`*^9, 3.8208269962994757`*^9, 
   3.820828552381014*^9, 3.821284245234398*^9, 3.821284319326886*^9, 
   3.821284374947292*^9, 3.821284679618116*^9, 3.8212847215944033`*^9, 
   3.8212847998497*^9, 3.821284838248551*^9, {3.821284930985134*^9, 
   3.821284957090477*^9}, 3.821285182875285*^9, 3.821285401874833*^9, {
   3.8212856454107494`*^9, 3.821285652781071*^9}, {3.8212857139535985`*^9, 
   3.821285793882101*^9}, 3.821285826664052*^9, 3.8212859328730373`*^9, 
   3.821285968101363*^9, 3.8212860408617325`*^9, {3.8212860762594514`*^9, 
   3.8212861065644555`*^9}, 3.821286157490925*^9, 3.821286206891287*^9, 
   3.8212863409931426`*^9, {3.821286569783309*^9, 3.8212866103750315`*^9}},
 CellLabel->"Out[92]=",ExpressionUUID->"8e1b0bcb-d621-4571-b5b3-271acaa4776f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"invEqns", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"vq", " ", "\[Equal]", " ", 
      RowBox[{
       RowBox[{"d", "*", 
        RowBox[{"Sqrt", "[", 
         RowBox[{"3", "/", "2"}], "]"}], "*", "vdc"}], "-", 
       RowBox[{"Rinv2", "*", "d", "*", "vdc"}]}]}], ",", " ", 
     RowBox[{"idc", " ", "\[Equal]", " ", 
      RowBox[{"d", "*", 
       RowBox[{"Sqrt", "[", 
        RowBox[{"3", "/", "2"}], "]"}], "*", "iq"}]}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"loadEqns", " ", "=", " ", 
   RowBox[{"{", " ", 
    RowBox[{"iq", " ", "\[Equal]", " ", 
     RowBox[{"vq", "/", "Rload"}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"sol", " ", "=", " ", 
   RowBox[{"Simplify", "/@", 
    RowBox[{"First", "@", 
     RowBox[{"Solve", "[", 
      RowBox[{
       RowBox[{"Join", "[", 
        RowBox[{"invEqns", ",", " ", "loadEqns"}], "]"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"idc", ",", "vq", ",", "iq"}], "}"}]}], "]"}]}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"eta", "/.", "sol"}], " ", "//", " ", "Simplify"}]}], "Input",
 CellChangeTimes->{{3.821284809880391*^9, 3.821284810389032*^9}, {
   3.8212848512358294`*^9, 3.821284913432061*^9}, 3.8212850209890614`*^9, {
   3.821285056855175*^9, 3.8212850573179374`*^9}, {3.821285144183219*^9, 
   3.821285144426569*^9}, 3.8212852692599487`*^9, {3.821285314921239*^9, 
   3.8212853209182076`*^9}, {3.821285853568149*^9, 3.8212858555408754`*^9}, {
   3.8212859729784474`*^9, 3.8212859734252515`*^9}},
 CellLabel->"In[79]:=",ExpressionUUID->"7e2be453-ffd4-4322-92a4-770ec3ff4e08"],

Cell[BoxData[
 RowBox[{"-", 
  FractionBox[
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{
      SqrtBox["6"], "-", 
      RowBox[{"2", " ", "Rinv2"}]}], ")"}], "2"], 
   RowBox[{
    RowBox[{"-", "6"}], "+", 
    RowBox[{"2", " ", 
     SqrtBox["6"], " ", "Rinv2"}]}]]}]], "Output",
 CellChangeTimes->{{3.821284858155839*^9, 3.8212849149948816`*^9}, {
   3.8212850445470805`*^9, 3.821285059174974*^9}, 3.821285145105753*^9, 
   3.8212853227313576`*^9, 3.821285856207094*^9, 3.8212859740455933`*^9},
 CellLabel->"Out[82]=",ExpressionUUID->"9ef1b065-6c9b-4b4b-a8b1-f58a59a1bfac"]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{3.8207450277870054`*^9},
 CellLabel->"In[11]:=",ExpressionUUID->"f5abff9e-d0f3-40ae-8ac1-3a41dbe9c2fc"],

Cell["Looks good", "Text",
 CellChangeTimes->{{3.820744758402816*^9, 
  3.8207447600262814`*^9}},ExpressionUUID->"c2755ad3-fcbe-40a5-9629-\
bc98f0e7af2b"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Last Hurrah for Constant Efficiency", "Section",
 CellChangeTimes->{{3.821316133154705*^9, 
  3.8213161396888585`*^9}},ExpressionUUID->"f6c39988-4363-4120-bc2a-\
ea8e3d6cbf77"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"invEqns", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"vq", " ", "\[Equal]", " ", 
      RowBox[{
       RowBox[{"d", "*", 
        RowBox[{"Sqrt", "[", 
         RowBox[{"3", "/", "2"}], "]"}], "*", "vdc"}], "-", 
       RowBox[{"f1", "[", 
        RowBox[{"d", ",", "idc"}], "]"}]}]}], ",", " ", 
     RowBox[{"idc", " ", "\[Equal]", " ", 
      RowBox[{
       RowBox[{"d", "*", 
        RowBox[{"Sqrt", "[", 
         RowBox[{"3", "/", "2"}], "]"}], "*", "iq"}], " ", "-", " ", 
       RowBox[{"f2", "[", 
        RowBox[{"d", ",", "vq"}], "]"}]}]}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"invRules", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{"vdc", "\[Rule]", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"f1", "[", 
         RowBox[{"d", ",", "idc"}], "]"}], "+", "vq"}], ")"}], "/", 
      RowBox[{"(", 
       RowBox[{"d", "*", 
        RowBox[{"Sqrt", "[", 
         RowBox[{"3", "/", "2"}], "]"}]}], ")"}]}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"powerEqn", " ", "=", " ", 
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{"1", "-", "\[Eta]"}], ")"}], "*", "d", "*", 
     RowBox[{"Sqrt", "[", 
      RowBox[{"3", "/", "2"}], "]"}], "*", "vdc", "*", "idc"}], " ", 
    "\[Equal]", " ", 
    RowBox[{
     RowBox[{"f1", "[", 
      RowBox[{"d", ",", "idc"}], "]"}], "+", 
     RowBox[{"f2", "[", 
      RowBox[{"d", ",", "vq"}], "]"}]}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"powerEqn", "/.", "invRules"}]}], "Input",
 CellChangeTimes->{{3.821316359565246*^9, 3.821316437041011*^9}, {
  3.8213165759859886`*^9, 3.8213166031179614`*^9}, {3.8213166370681734`*^9, 
  3.8213168099466066`*^9}},
 CellLabel->"In[17]:=",ExpressionUUID->"0c57c09b-06b4-43ff-a2fe-140ddde921cf"],

Cell[BoxData[
 RowBox[{
  RowBox[{"idc", " ", 
   RowBox[{"(", 
    RowBox[{"1", "-", "\[Eta]"}], ")"}], " ", 
   RowBox[{"(", 
    RowBox[{"vq", "+", 
     RowBox[{"f1", "[", 
      RowBox[{"d", ",", "idc"}], "]"}]}], ")"}]}], "\[Equal]", 
  RowBox[{
   RowBox[{"f1", "[", 
    RowBox[{"d", ",", "idc"}], "]"}], "+", 
   RowBox[{"f2", "[", 
    RowBox[{"d", ",", "vq"}], "]"}]}]}]], "Output",
 CellChangeTimes->{
  3.821316731624771*^9, {3.821316804123094*^9, 3.821316810619239*^9}},
 CellLabel->"Out[20]=",ExpressionUUID->"9632c767-9264-42e3-ae88-70b33f199aeb"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"powerEqn", "[", 
    RowBox[{"[", "1", "]"}], "]"}], "/.", "invRules"}], "//", 
  "Distribute"}]], "Input",
 CellChangeTimes->{{3.821316856158617*^9, 3.8213168804515657`*^9}},
 CellLabel->"In[22]:=",ExpressionUUID->"edb15493-101e-4d1f-b63a-939e0ad6d798"],

Cell[BoxData[
 RowBox[{
  RowBox[{"idc", " ", "vq"}], "-", 
  RowBox[{"idc", " ", "vq", " ", "\[Eta]"}], "+", 
  RowBox[{"idc", " ", 
   RowBox[{"f1", "[", 
    RowBox[{"d", ",", "idc"}], "]"}]}], "-", 
  RowBox[{"idc", " ", "\[Eta]", " ", 
   RowBox[{"f1", "[", 
    RowBox[{"d", ",", "idc"}], "]"}]}]}]], "Output",
 CellChangeTimes->{{3.821316863639353*^9, 3.8213168807738843`*^9}},
 CellLabel->"Out[22]=",ExpressionUUID->"cde37cb2-026d-4c5d-89d8-5a2441c94f91"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Solve", "[", 
  RowBox[{"invEqns", ",", 
   RowBox[{"{", 
    RowBox[{"vq", ",", "idc"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8213165556527452`*^9, 3.821316561254299*^9}, {
  3.8213166049773903`*^9, 3.8213166174140944`*^9}},
 CellLabel->"In[8]:=",ExpressionUUID->"f74dcb7d-dc16-469b-82d4-b341ca86652e"],

Cell[BoxData[
 TemplateBox[{
  "Solve", "nsmet", 
   "\"This system cannot be solved with the methods available to Solve.\"", 2,
    8, 27, 19975104959833606794, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.8213166180203757`*^9},
 CellLabel->
  "During evaluation of \
In[8]:=",ExpressionUUID->"7fbcbeb6-b4c3-4564-babe-9b869e005b8d"],

Cell[BoxData[
 RowBox[{"Solve", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"vq", "\[Equal]", 
      RowBox[{
       RowBox[{
        SqrtBox[
         FractionBox["3", "2"]], " ", "d", " ", "vdc"}], "-", 
       RowBox[{"f1", "[", 
        RowBox[{"d", ",", "idc"}], "]"}]}]}], ",", 
     RowBox[{"idc", "\[Equal]", 
      RowBox[{
       RowBox[{
        SqrtBox[
         FractionBox["3", "2"]], " ", "d", " ", "iq"}], "-", 
       RowBox[{"f2", "[", 
        RowBox[{"d", ",", "vq"}], "]"}]}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"vq", ",", "idc"}], "}"}]}], "]"}]], "Output",
 CellChangeTimes->{3.8213166180313826`*^9},
 CellLabel->"Out[8]=",ExpressionUUID->"c4ddc6ea-d2e5-45de-ae90-e329b2675ee2"]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1909.5, 1015.5},
WindowMargins->{{Automatic, -364.5}, {638.25, Automatic}},
FrontEndVersion->"12.1 for Microsoft Windows (64-bit) (March 18, 2020)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"dd9ce3ee-5390-4b17-8f6a-7d08a5212663"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 304, 6, 34, "Text",ExpressionUUID->"e5af8d3e-5d3b-4409-8b31-744bf37c4128"],
Cell[865, 28, 129884, 2140, 299, "Text",ExpressionUUID->"52064609-8540-4536-8ee8-e024aea732fa"],
Cell[130752, 2170, 522, 12, 66, "Input",ExpressionUUID->"425ef856-9bd3-4508-a0b9-bfe5191c1d46"],
Cell[131277, 2184, 1705, 32, 28, "Input",ExpressionUUID->"3ac4010c-7ec3-4252-870f-294f15f704f5"],
Cell[132985, 2218, 590, 15, 28, "Input",ExpressionUUID->"203c00b1-dcd9-4ba2-bb8d-2fd6a1259152"],
Cell[CellGroupData[{
Cell[133600, 2237, 171, 3, 66, "Section",ExpressionUUID->"050f3866-d4b4-4010-afe8-fddcc1041f22"],
Cell[CellGroupData[{
Cell[133796, 2244, 6011, 140, 272, "Input",ExpressionUUID->"43efb6d8-bc7e-4e39-98c8-f576511db76e"],
Cell[139810, 2386, 3834, 77, 603, "Output",ExpressionUUID->"c60b214a-1751-4eeb-80be-a9d7377952d9"],
Cell[143647, 2465, 530, 10, 37, "Message",ExpressionUUID->"1c171b01-d941-4f7b-9847-fa83d0b9b26a"],
Cell[144180, 2477, 613, 11, 37, "Message",ExpressionUUID->"9c83705f-4b1f-4e3a-b28f-5fdfa5dc8dd4"],
Cell[144796, 2490, 638, 11, 23, "Message",ExpressionUUID->"abe0a3c4-fd99-4089-8937-e20241147b89"],
Cell[145437, 2503, 638, 11, 23, "Message",ExpressionUUID->"2db32172-b69b-4aa5-80fe-2959970163b1"],
Cell[146078, 2516, 419, 8, 23, "Message",ExpressionUUID->"0409c931-f606-4e80-9016-ccf8c9574e19"],
Cell[146500, 2526, 529, 10, 37, "Message",ExpressionUUID->"f2d60ac4-971f-4315-87cb-6e193ad78342"],
Cell[147032, 2538, 614, 11, 37, "Message",ExpressionUUID->"1cd9bd43-830a-4f34-985c-865c5cd608f7"],
Cell[147649, 2551, 637, 11, 23, "Message",ExpressionUUID->"58a2a1eb-8dd4-498f-97a4-912c06ec1159"],
Cell[148289, 2564, 639, 11, 23, "Message",ExpressionUUID->"f879fe2c-c1d4-427d-a690-e5f69757f548"],
Cell[148931, 2577, 420, 8, 23, "Message",ExpressionUUID->"f6cc22ef-6d5b-467c-8dd3-e05fc5bd4df1"]
}, Open  ]],
Cell[CellGroupData[{
Cell[149388, 2590, 3811, 77, 599, "Input",ExpressionUUID->"2db21af2-34c3-4afc-9d11-79df59c25c60"],
Cell[153202, 2669, 3836, 77, 603, "Output",ExpressionUUID->"6a0dbd0e-f99f-496a-a548-77490ce6eb73"],
Cell[157041, 2748, 530, 10, 37, "Message",ExpressionUUID->"134983f3-0a2e-4186-8571-00bfcbc0062f"],
Cell[157574, 2760, 615, 11, 37, "Message",ExpressionUUID->"c003a742-9562-4ab3-902d-4d257b91a101"],
Cell[158192, 2773, 636, 11, 23, "Message",ExpressionUUID->"3cfa7874-29b9-49eb-bc26-f8785af635d7"],
Cell[158831, 2786, 636, 11, 23, "Message",ExpressionUUID->"72f2f91a-a4ad-487f-8538-6f5e2ee8fc59"],
Cell[159470, 2799, 420, 8, 23, "Message",ExpressionUUID->"7576bfca-ec3d-4f10-a8fc-9a8ac0d85297"],
Cell[159893, 2809, 531, 10, 37, "Message",ExpressionUUID->"f9d16311-3d17-48ad-a491-a3d850d4fd14"],
Cell[160427, 2821, 614, 11, 37, "Message",ExpressionUUID->"533e960c-bd2a-4ae0-b472-bba4d8a86498"],
Cell[161044, 2834, 639, 11, 23, "Message",ExpressionUUID->"10aa8375-3ead-4ad7-b524-f4000ae42a1f"],
Cell[161686, 2847, 636, 11, 23, "Message",ExpressionUUID->"f3e62813-c442-45dd-9547-2b9f0caf6794"],
Cell[162325, 2860, 420, 8, 23, "Message",ExpressionUUID->"8ccf11ae-2c8a-4e6f-afbb-00ff46c272d6"]
}, Open  ]],
Cell[162760, 2871, 148, 2, 28, "Input",ExpressionUUID->"52846653-b1a4-434a-a5e9-2b7a0bcdf530"],
Cell[162911, 2875, 154, 3, 34, "Text",ExpressionUUID->"9611e324-8337-4fd7-8377-eb9e847ece7c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[163102, 2883, 218, 4, 66, "Section",ExpressionUUID->"74452b38-6c21-4268-b5fb-5dae98536890"],
Cell[CellGroupData[{
Cell[163345, 2891, 5843, 132, 235, "Input",ExpressionUUID->"241598b2-bfc8-4503-9b7a-7ccba3067ecf"],
Cell[169191, 3025, 4793, 89, 603, "Output",ExpressionUUID->"75ddf93d-5208-4529-803f-2d8a424d2b56"],
Cell[173987, 3116, 354, 7, 23, "Message",ExpressionUUID->"14b23a4e-0fc7-4ff3-ab57-9f2bdb09a0b6"],
Cell[174344, 3125, 427, 8, 23, "Message",ExpressionUUID->"306a8aa9-d4c4-40b9-a344-33baa3ab2e71"],
Cell[174774, 3135, 427, 8, 23, "Message",ExpressionUUID->"9918ae5b-d4df-4417-89fb-a7b786331d6a"]
}, Open  ]],
Cell[175216, 3146, 203, 4, 34, "Text",ExpressionUUID->"4083e322-0aea-4f2f-bf79-03e79dcb20eb"]
}, Open  ]],
Cell[CellGroupData[{
Cell[175456, 3155, 254, 4, 66, "Section",ExpressionUUID->"7057ce03-0de2-4514-b616-f848ac842335"],
Cell[CellGroupData[{
Cell[175735, 3163, 7740, 172, 291, "Input",ExpressionUUID->"fd062c0a-d29a-4558-87b5-906afd3790ae"],
Cell[183478, 3337, 4843, 93, 603, "Output",ExpressionUUID->"8e1b0bcb-d621-4571-b5b3-271acaa4776f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[188358, 3435, 1662, 40, 85, "Input",ExpressionUUID->"7e2be453-ffd4-4322-92a4-770ec3ff4e08"],
Cell[190023, 3477, 582, 15, 58, "Output",ExpressionUUID->"9ef1b065-6c9b-4b4b-a8b1-f58a59a1bfac"]
}, Open  ]],
Cell[190620, 3495, 149, 2, 28, "Input",ExpressionUUID->"f5abff9e-d0f3-40ae-8ac1-3a41dbe9c2fc"],
Cell[190772, 3499, 154, 3, 34, "Text",ExpressionUUID->"c2755ad3-fcbe-40a5-9629-bc98f0e7af2b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[190963, 3507, 182, 3, 66, "Section",ExpressionUUID->"f6c39988-4363-4120-bc2a-ea8e3d6cbf77"],
Cell[CellGroupData[{
Cell[191170, 3514, 1824, 52, 85, "Input",ExpressionUUID->"0c57c09b-06b4-43ff-a2fe-140ddde921cf"],
Cell[192997, 3568, 563, 16, 32, "Output",ExpressionUUID->"9632c767-9264-42e3-ae88-70b33f199aeb"]
}, Open  ]],
Cell[CellGroupData[{
Cell[193597, 3589, 301, 7, 28, "Input",ExpressionUUID->"edb15493-101e-4d1f-b63a-939e0ad6d798"],
Cell[193901, 3598, 463, 11, 55, "Output",ExpressionUUID->"cde37cb2-026d-4c5d-89d8-5a2441c94f91"]
}, Open  ]],
Cell[CellGroupData[{
Cell[194401, 3614, 338, 7, 28, "Input",ExpressionUUID->"f74dcb7d-dc16-469b-82d4-b341ca86652e"],
Cell[194742, 3623, 360, 9, 23, "Message",ExpressionUUID->"7fbcbeb6-b4c3-4564-babe-9b869e005b8d"],
Cell[195105, 3634, 728, 22, 55, "Output",ExpressionUUID->"c4ddc6ea-d2e5-45de-ae90-e329b2675ee2"]
}, Open  ]]
}, Open  ]]
}
]
*)

