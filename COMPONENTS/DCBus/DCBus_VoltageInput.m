classdef DCBus_VoltageInput < Component
    %DCBUS Component
    
    properties
        N_inputs double {mustBeInteger} = 1
        N_outputs double {mustBeInteger} = 1
        
        L double = 0
        R double = 0
        C double = 0
    end
    
    methods (Access = protected)
        function DefineComponent(obj)
            % Capacitance Types
            C(1) = Type_Capacitance('x');
            
            % PowerFlow Types
            PF(1) = Type_PowerFlow('u1*xt*xh');
            PF(2) = Type_PowerFlow('xt^2');
            
            % Counters   
            V_cnt = [1 obj.N_inputs obj.N_inputs obj.N_outputs 1];
            V_cumsum = cumsum([0 V_cnt]);
            
            I_cumsum = cumsum([0, obj.N_inputs, obj.N_outputs]);
            
            E_cumsum = cumsum([0 obj.N_inputs obj.N_inputs obj.N_outputs obj.N_inputs]);
            
            % Define Vertices that don't vary with N_inputs or N_outputs
            V(V_cumsum(1)+1) = GraphVertex_Internal(...
                'Description', "Internal Voltage",... 
                'VertexType',"Voltage",...
                'Capacitance',C(1),...
                'Coefficient',obj.C,...
                'Initial',0);            
                        
            V(V_cumsum(5)+1) = GraphVertex_External(...
                'Description', "Heat Sink",...
                'VertexType',"Temperature",...
                'Initial',0);
            
            % Elements that vary with N_inputs
            for i = 1:obj.N_inputs
                V(V_cumsum(2)+i) = GraphVertex_Internal(...
                    'Description', sprintf("Internal Current %d", i),...
                    'VertexType',"Current",...
                    'Capacitance',C(1),...
                    'Coefficient',obj.L,...
                    'Initial',0);
                
                V(V_cumsum(3)+i) = GraphVertex_External(...
                    'Description', sprintf("Input Voltage %d", i),...
                    'VertexType',"Voltage",...
                    'Initial',0);
                
                I(I_cumsum(1)+i) = GraphInput(sprintf("Input %d",i));
                
                E(E_cumsum(1)+i) = GraphEdge_Internal(...
                    'PowerFlow',PF(1),...
                    'Input',I(I_cumsum(1)+i),...
                    'Coefficient',1,...
                    'TailVertex',V(V_cumsum(2)+i),...
                    'HeadVertex',V(V_cumsum(1)+1));
                
                E(E_cumsum(2)+i) = GraphEdge_Internal(...
                    'PowerFlow',PF(1),...
                    'Input',I(I_cumsum(1)+i),...
                    'Coefficient',1,...
                    'TailVertex',V(V_cumsum(3)+i),...
                    'HeadVertex',V(V_cumsum(2)+i));
                
                E(E_cumsum(4)+i) = GraphEdge_Internal(...
                    'PowerFlow',PF(2),...
                    'Coefficient',obj.R,...
                    'TailVertex',V(V_cumsum(2)+i),...
                    'HeadVertex',V(V_cumsum(5)+1));
                
                p(i) = ComponentPort('Description', sprintf("Voltage Input %d",i),'Element', E(E_cumsum(2)+i));
            end
            
            % Elements that vary with N_ouptuts
            for i = 1:obj.N_outputs
                V(V_cumsum(4)+i) = GraphVertex_External(...
                    'Description', sprintf("Ouptut Current %d", i),...
                    'VertexType',"Current",...
                    'Initial',0);
                
                I(I_cumsum(2)+i) = GraphInput(sprintf("Output %d",i));
                
                E(E_cumsum(3)+i) = GraphEdge_Internal(...
                    'PowerFlow',PF(1),...
                    'Input',I(I_cumsum(2)+i),...
                    'Coefficient',1,...
                    'TailVertex',V(V_cumsum(1)+1),...
                    'HeadVertex',V(V_cumsum(4)+i));
                
                p(end+1) = ComponentPort('Description', sprintf("Current Output %d",i),'Element', E(E_cumsum(3)+i));
            end
            
            p(end+1) = ComponentPort('Description',"Heat Sink",'Element',V(V_cumsum(5)+1));
              
            g = Graph(V,E);
            obj.graph = g;
            
            % Ports
            obj.Ports = p; 
        end
    end
end

